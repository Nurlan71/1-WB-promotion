/** Perferita **
 * @author https://Ecommonkey.ru <adspromolab@gmail.com>
 * @see {@link https://t.me/deepont Telegram} —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Google —Ç–∞–±–ª–∏—Ü –∏ GAS —Å–∫—Ä–∏–ø—Ç–æ–≤,  AI –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ
 * @see {@link https://openapi.wb.ru Wildberries API}
 * –ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è –≤–µ—Ä—Å–∏–∏ 281
 */

// ####################################################################################################################################
// SCRIPTS
// ####################################################################################################################################

function copyActiveSheet() { try { // –ö–æ–ø–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç
    Ecommonkey.Wildberries.copyActiveSheet(); } catch (error) {  Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ copyActiveSheet: " + error.message); }}

function checkDeletedWords() { try { // –í—ã–¥–µ–ª—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    Ecommonkey.Wildberries.checkDeletedWords(); } catch (error) {  Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ checkDeletedWords: " + error.message); }}

function onOpen() {
try {Ecommonkey.Wildberries.onOpen(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ onOpen: " + error.message); }}

function onEdit(e) {
try {Ecommonkey.Wildberries.onEdit(e); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ onEdit: " + error.message); }}

function setFormulaParaDataset() { try { // üü® –û—Ç—á–µ—Ç
    Ecommonkey.Wildberries.setFormulaParaDataset(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ setFormulaParaDataset: " + error.message); }}

function setFormulaParaDataUnit() { try { // üü´ –û—Ç—á–µ—Ç
    Ecommonkey.Wildberries.setFormulaParaDataUnit(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ setFormulaParaDataUnit: " + error.message); }}

function getCampaignId() { try { // –ü–æ–ª—É—á–∞–µ–º ID –†–ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —á–µ–∫–±–æ–∫—Å–∞–º –Ω–∞ –õ–∏—Å—Ç–µ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    Ecommonkey.Wildberries.getCampaignId(); } catch (error) {  Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ getCampaignId: " + error.message); }}

function showDialog() { try { // –í—ã–≤–æ–¥–∏–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
    Ecommonkey.Wildberries.showDialog(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ showDialog: " + error.message); }}

function uncheckCheckboxes() { try { // –û—Ç–∫–ª—é—á–∏—Ç—å —á–µ–∫–±–æ–∫—Å—ã
    Ecommonkey.Wildberries.uncheckCheckboxes(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ uncheckCheckboxes: " + error.message); }}

function highlightCheckboxes() { try { // –í—ã–±—Ä–∞—Ç—å –≤—Å–µ —á–µ–∫–±–æ–∫—Å—ã –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
    Ecommonkey.Wildberries.highlightCheckboxes(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ highlightCheckboxes: " + error.message); }}

function updateSettingsFromStatistics() { try { // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ P37:P50
    Ecommonkey.Wildberries.updateSettingsFromStatistics(); }
    catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ updateSettingsFromStatistics: " + error.message); }}

function checkAndUpdateCheckboxes() { try { // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –∏ 'üöß –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã'
    Ecommonkey.Wildberries.checkAndUpdateCheckboxes(); }
    catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ checkAndUpdateCheckboxes: " + error.message); }}

function updateCheckboxes_CpcCtr() { try { // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è CTR / CPC '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    Ecommonkey.Wildberries.updateCheckboxes_CpcCtr(); }
    catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ updateCheckboxes_CpcCtr: " + error.message); }}

function customVLOOKUP() { try { // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' —Å–∏–º–≤–æ–ª ‚òë –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    Ecommonkey.Wildberries.customVLOOKUP(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ customVLOOKUP: " + error.message); }}

function setFormulasParaSettings() { try { // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É–ª—ã –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
    Ecommonkey.Wildberries.setFormulasParaSettings(); }
    catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ setFormulasParaSettings: " + error.message); }}

function advanalytics() { try { // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –†–ö üöÄ –†–µ–∫–ª–∞–º–∞
    Ecommonkey.Wildberries.advanalytics(); } catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ advanalytics: " + error.message); }}

function transferDataUnits() { try { // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ üìÖ UNIT
    Ecommonkey.Wildberries.transferDataUnits(); } catch (error) {
      Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ transferDataUnits: " + error.message); }}

function transferDataUnitsV2() { try { // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ üìÖ UNIT ABC
    Ecommonkey.Wildberries.transferDataUnitsV2(); } catch (error) {
      Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ transferDataUnitsV2: " + error.message); }}

// ####################################################################################################################################
// MAIN
// ####################################################################################################################################

// –ü–æ–ª—É—á–∞–µ–º  üìù –°–ø–∏—Å–æ–∫ –†–ö + ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö + üöß –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö + –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã –∏–∑ –†–ö –≤ N46:50 –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É–ª—ã
function get_main() { Ecommonkey.Wildberries.get_main(get_advList, get_adverts, get_advStats_weeks, setFormulasParaSettings, Ecommonkey.Wildberries.updateCheckParaRecPolSettings);}

// –û–±–Ω–æ–≤–ª—è–µ–º üöß –ó–∞–ø—Ä–æ—Å—ã –†–ö –∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª—è–µ–º –ê—Ä—Ç–∏–∫—É–ª—ã –≤ P37:N50 –∞ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º üõÑ –¢–æ–≤–∞—Ä—ã WB
function get_main1() { Ecommonkey.Wildberries.get_main1(get_stats_keywords_weeks, updateSettingsFromStatistics, sppProductDetails);}

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ üöß –ö–ª–∞—Å—Ç–µ—Ä–æ–≤ –∏ –≤—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
function get_main2() { Ecommonkey.Wildberries.get_main2(get_words_clust, customVLOOKUP);} // ‚òë customVLOOKUP

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ –æ—á–µ—Ä–µ–¥–∏ üöß –ó–∞–ø—Ä–æ—Å—ã –†–ö + üöß –ö–ª–∞—Å—Ç–µ—Ä—ã + üìà –ë–∞–ª–∞–Ω—Å –†–ö –∏ –ë—é–¥–∂–µ—Ç –†–ö + P37:P50 + –º–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã
function get_main3() { Ecommonkey.Wildberries.get_main3(get_stats_keywords_weeks, get_words_clust, get_advBalance, customVLOOKUP, updateSettingsFromStatistics );} // P37:P50

// –£–¥–∞–ª—è–µ–º —Ñ—Ä–∞–∑—ã, —Å–Ω–∏–º–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Ç–µ—Ä—ã, –≤—ã–¥–µ–ª—è–µ–º –º–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã
function get_main4() { Ecommonkey.Wildberries.get_main4(set_excluded, uncheckCheckboxes, get_words_clust, customVLOOKUP);}

// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –ø–ª—é—Å —Ñ—Ä–∞–∑—ã –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ—Ä–∞–∑ –∏ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤
function get_main5() { Ecommonkey.Wildberries.get_main5(delete_excluded, get_stats_keywords_weeks, get_words_clust, customVLOOKUP);}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –†–ö –∏ —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä
function get_main6() { Ecommonkey.Wildberries.get_main6(get_card_list, get_advStats_weeks);}

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ –æ—á–µ—Ä–µ–¥–∏ –ë–∞–ª–∞–Ω—Å, –ë—é–¥–∂–µ—Ç –†–ö –∏ CPM
function get_main11() { Ecommonkey.Wildberries.get_main11(get_advBalance, get_adverts);}

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ –æ—á–µ—Ä–µ–¥–∏ üöß –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ üÖ∞Ô∏è –ü–æ–∑–∏—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º
function get_main12() { Ecommonkey.Wildberries.get_main12(search_words, search_words_per);}

// ####################################################################################################################################
// HELPER FUNCTIONS
// ####################################################################################################################################

/**
 * –ì–æ—Ç–æ–≤–∏—Ç –ª–∏—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö: –æ—á–∏—â–∞–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏.
 * @param {string} sheetName - –ò–º—è –ª–∏—Å—Ç–∞.
 * @param {Array<string>} headers - –ú–∞—Å—Å–∏–≤ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
 * @returns {Sheet} –û–±—ä–µ–∫—Ç –ª–∏—Å—Ç–∞.
 */
function _setupSheet(sheetName, headers) {
  const ss = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = ss.getSheetByName(sheetName);
  if (!sheet) {
    sheet = ss.insertSheet(sheetName);
  }
  sheet.clearContents();
  if (headers && headers.length > 0) {
    sheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight('bold');
  }
  return sheet;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –∏–∑ —è—á–µ–µ–∫ –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'.
 * @param {string} fromCell - –Ø—á–µ–π–∫–∞ —Å –¥–∞—Ç–æ–π –Ω–∞—á–∞–ª–∞ (–Ω–∞–ø—Ä. 'A1').
 * @param {string} toCell - –Ø—á–µ–π–∫–∞ —Å –¥–∞—Ç–æ–π –æ–∫–æ–Ω—á–∞–Ω–∏—è (–Ω–∞–ø—Ä. 'B1').
 * @returns {{from: string, to: string}} –û–±—ä–µ–∫—Ç —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏.
 */
function _getDateRangeFromSettings(fromCell, toCell) {
    const settingsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
    if (!settingsSheet) {
        throw new Error("–õ–∏—Å—Ç '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
    const dateFrom = settingsSheet.getRange(fromCell).getValue();
    const dateTo = settingsSheet.getRange(toCell).getValue();

    if (!dateFrom || !(dateFrom instanceof Date)) {
        throw new Error(`–î–∞—Ç–∞ –≤ —è—á–µ–π–∫–µ ${fromCell} –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.`);
    }

    // dateTo is optional for some endpoints
    const effectiveDateTo = (dateTo && dateTo instanceof Date) ? dateTo : new Date();

    const formattedFrom = Utilities.formatDate(dateFrom, Session.getScriptTimeZone(), "yyyy-MM-dd");
    const formattedTo = Utilities.formatDate(effectiveDateTo, Session.getScriptTimeZone(), "yyyy-MM-dd");

    return { from: formattedFrom, to: formattedTo };
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç ID –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'.
 * –°–Ω–∞—á–∞–ª–∞ –∏—â–µ—Ç –æ—Ç–º–µ—á–µ–Ω–Ω—ã–π —á–µ–∫–±–æ–∫—Å –≤ —Å—Ç–æ–ª–±—Ü–µ K (—Å—Ç—Ä–æ–∫–∏ 9-97),
 * –∑–∞—Ç–µ–º, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —è—á–µ–π–∫–∏ O30.
 * @returns {number|null} ID –∫–∞–º–ø–∞–Ω–∏–∏ –∏–ª–∏ null, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
 */
function _getSelectedCampaignId() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  if (!sheet) {
    SpreadsheetApp.getUi().alert("–õ–∏—Å—Ç '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    return null;
  }

  // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 9-97
  const checkRange = sheet.getRange('K9:K97');
  const idRange = sheet.getRange('C9:C97'); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ ID –≤ —Å—Ç–æ–ª–±—Ü–µ C

  const checkboxes = checkRange.getValues();
  const ids = idRange.getValues();

  for (let i = 0; i < checkboxes.length; i++) {
    if (checkboxes[i][0] === true) {
      const campaignId = ids[i][0];
      if (campaignId && typeof campaignId === 'number' && campaignId > 0) {
        Logger.log(`–ù–∞–π–¥–µ–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è –ø–æ —á–µ–∫–±–æ–∫—Å—É: ${campaignId}`);
        return campaignId;
      }
    }
  }

  // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: –ø–æ–ª—É—á–∏—Ç—å ID –∏–∑ —è—á–µ–π–∫–∏ O30
  const campaignIdFromCell = sheet.getRange('O30').getValue();
  if (campaignIdFromCell && typeof campaignIdFromCell === 'number' && campaignIdFromCell > 0) {
    Logger.log(`–ù–∞–π–¥–µ–Ω–∞ –∫–∞–º–ø–∞–Ω–∏—è –≤ —è—á–µ–π–∫–µ O30: ${campaignIdFromCell}`);
    return campaignIdFromCell;
  }

  SpreadsheetApp.getUi().alert('–ù–µ –≤—ã–±—Ä–∞–Ω–∞ –Ω–∏ –æ–¥–Ω–∞ —Ä–µ–∫–ª–∞–º–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ñ–ª–∞–∂–æ–∫ –≤ —Å—Ç–æ–ª–±—Ü–µ K –Ω–∞ –ª–∏—Å—Ç–µ "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ ID –≤ —è—á–µ–π–∫–µ O30.');
  return null;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –æ–±—â–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'.
 * @param {object} balanceData - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –±–∞–ª–∞–Ω—Å–µ { balance, net, bonus }.
 */
function _updateBalanceSheet(balanceData) {
  if (!balanceData) return;
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  if (!sheet) throw new Error("–õ–∏—Å—Ç '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω.");

  // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ: –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —è—á–µ–π–∫–∏ C3, C4, C5
  sheet.getRange('C3').setValue(balanceData.balance);
  sheet.getRange('C4').setValue(balanceData.net);
  sheet.getRange('C5').setValue(balanceData.bonus);
  Logger.log(`–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${balanceData.balance}‚ÇΩ (–æ—Å–Ω–æ–≤–Ω–æ–π), ${balanceData.net}‚ÇΩ (–±–æ–Ω—É—Å–Ω—ã–π)`);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –±—é–¥–∂–µ—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'.
 * @param {number} campaignId - ID –∫–∞–º–ø–∞–Ω–∏–∏.
 * @param {object} budgetData - –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –±—é–¥–∂–µ—Ç–µ { total }.
 */
function _updateBudgetSheet(campaignId, budgetData) {
  if (!campaignId || !budgetData || budgetData.total === undefined) return;

  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  if (!sheet) throw new Error("–õ–∏—Å—Ç '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω.");

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è campaignId –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü –±—é–¥–∂–µ—Ç–∞
  // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ ID –≤ C9:C97, –∞ –±—é–¥–∂–µ—Ç –≤ F9:F97
  const idRange = sheet.getRange('C9:C97');
  const ids = idRange.getValues();

  for (let i = 0; i < ids.length; i++) {
    if (ids[i][0] == campaignId) {
      const budgetCell = sheet.getRange(i + 9, 6); // –°—Ç–æ–ª–±–µ—Ü F
      budgetCell.setValue(budgetData.total);
      Logger.log(`–ë—é–¥–∂–µ—Ç –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId} –æ–±–Ω–æ–≤–ª–µ–Ω: ${budgetData.total}‚ÇΩ`);
      return;
    }
  }
  Logger.log(`–ö–∞–º–ø–∞–Ω–∏—è —Å ID ${campaignId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏' –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞.`);
}

// ####################################################################################################################################
// API FUNCTIONS
// ####################################################################################################################################


// üí≥ –ò—Å—Ç–æ—Ä–∏–∏ –∑–∞—Ç—Ä–∞—Ç –†–ö - –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞—Ç—Ä–∞—Ç —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 1 –∑–∞–ø—Ä–æ—Å –≤ —Å–µ–∫—É–Ω–¥—É.
function get_advupd() {
  // TODO: This function's logic is unclear due to black-box helpers.
  // It needs to be implemented based on user's specific sheet structure.
  SpreadsheetApp.getUi().alert("–§—É–Ω–∫—Ü–∏—è get_advupd –Ω–µ –±—ã–ª–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.");
}


// üìù –°–ø–∏—Å–æ–∫ –†–ö - –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
function get_advList() {
  try {
    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    // Fetches ALL campaigns using the /adv/v0/adverts endpoint.
    const allCampaigns = WildberriesAPI.advert.getAllCampaigns();

    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üìù –°–ø–∏—Å–æ–∫ –†–ö');
    if (!sheet) throw new Error("–õ–∏—Å—Ç 'üìù –°–ø–∏—Å–æ–∫ –†–ö' –Ω–µ –Ω–∞–π–¥–µ–Ω.");

    sheet.clearContents();
    const statusMap = { 4: "–ì–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É", 7: "–ó–∞–≤–µ—Ä—à–µ–Ω–∞", 8: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞", 9: "–ò–¥—É—Ç –ø–æ–∫–∞–∑—ã", 11: "–ü–∞—É–∑–∞" };
    const typeMap = { 4: "–ö–∞—Ç–∞–ª–æ–≥", 5: "–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞", 6: "–ü–æ–∏—Å–∫", 7: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", 8: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", 9: "–ü–æ–∏—Å–∫ + –∫–∞—Ç–∞–ª–æ–≥" };
    const headers = [['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–¢–∏–ø', '–°—Ç–∞—Ç—É—Å', '–î–Ω. –±—é–¥–∂–µ—Ç', '–ù–∞—á–∞–ª–æ', '–ö–æ–Ω–µ—Ü']];
    const output = [headers];

    if (allCampaigns && allCampaigns.length > 0) {
      allCampaigns.forEach(c => {
        output.push([
          c.advertId,
          c.name,
          typeMap[c.type] || `–¢–∏–ø ${c.type}`,
          statusMap[c.status] || `–°—Ç–∞—Ç—É—Å ${c.status}`,
          c.dailyBudget,
          c.startTime ? new Date(c.startTime).toLocaleString() : '',
          c.endTime ? new Date(c.endTime).toLocaleString() : ''
        ]);
      });
    }

    if (output.length > 1) {
      sheet.getRange(1, 1, output.length, output[0].length).setValues(output);
    }
    Logger.log("–°–ø–∏—Å–æ–∫ –†–ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.");
  } catch (e) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_advList: ${e.message}\n${e.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –≤ get_advList: ${e.message}`);
  }
}


// ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö –ø–æ query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, –ª–∏–±–æ –ø–æ —Å–ø–∏—Å–∫—É ID –∫–∞–º–ø–∞–Ω–∏–π.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
function get_adverts() {
  try {
    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö');
    if (!sheet) throw new Error("–õ–∏—Å—Ç '‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö' –Ω–µ –Ω–∞–π–¥–µ–Ω.");

    // Assumption: campaign IDs are read from a specific range, e.g., 'A2:A' on a settings sheet.
    const settingsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
    const campaignIds = settingsSheet.getRange('A2:A' + settingsSheet.getLastRow()).getValues().flat().filter(id => id);

    if (!campaignIds || campaignIds.length === 0) {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω—ã ID –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.");
      return;
    }

    const campaignData = WildberriesAPI.advert.getCampaignList(campaignIds);

    const statusMap = { 4: "–ì–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É", 7: "–û—Ç–∫–∞–∑–∞–ª—Å—è", 8: "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞", 9: "–ò–¥—É—Ç –ø–æ–∫–∞–∑—ã", 11: "–ü–∞—É–∑–∞" };
    const typeMap = { 4: "–ö–∞—Ç–∞–ª–æ–≥", 5: "–ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞", 6: "–ü–æ–∏—Å–∫", 7: "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", 8: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", 9: "–ü–æ–∏—Å–∫ + –∫–∞—Ç–∞–ª–æ–≥" };
    const headers = ["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–¢–∏–ø", "–°—Ç–∞—Ç—É—Å", "–î–Ω. –±—é–¥–∂–µ—Ç", "–ù–∞—á–∞–ª–æ", "–ö–æ–Ω–µ—Ü"];
    const output = [headers];

    if (campaignData) {
      campaignData.forEach(c => {
        output.push([c.advertId, c.name, typeMap[c.type] || c.type, statusMap[c.status] || c.status, c.dailyBudget, c.startTime, c.endTime]);
      });
    }

    sheet.clearContents();
    if (output.length > 1) {
      sheet.getRange(1, 1, output.length, output[0].length).setValues(output);
      sheet.getRange(2, 1, output.length - 1, output[0].length).setHorizontalAlignment('left');
    } else {
      Logger.log("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É.");
    }
  } catch(e) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_adverts: ${e.message}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –≤ get_adverts: ${e.message}`);
  }
}

function get_advStats() {
  // TODO: Implementation requires understanding the logic of fetchAndProcessStats,
  // aggregateData, and setupFullstatsSheet from the old library.
  SpreadsheetApp.getUi().alert("–§—É–Ω–∫—Ü–∏—è get_advStats —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É.");
}

function get_advStats_weeks() {
  // TODO: Implementation requires understanding the logic of setupFullstatsWeekSheet
  // and avdFullWeekProcessData from the old library, especially how datePeriods are handled.
  SpreadsheetApp.getUi().alert("–§—É–Ω–∫—Ü–∏—è get_advStats_weeks —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É.");
}

function get_stats_keywords() {
  // TODO: Implementation requires understanding the logic of fetchAndUpdateStatsADVS.
  SpreadsheetApp.getUi().alert("–§—É–Ω–∫—Ü–∏—è get_stats_keywords —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É.");
}

function get_stats_keywords_weeks() {
  // TODO: Implementation requires understanding how initializeDataSheetAdvWord and getKeywordStats
  // from the old library worked, especially with date ranges.
  SpreadsheetApp.getUi().alert("–§—É–Ω–∫—Ü–∏—è get_stats_keywords_weeks —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É.");
}

function get_words_clust() {
  try {
    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    const settingsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
    const campaignId = settingsSheet.getRange('O30').getValue(); // Assumption
    if (!campaignId) throw new Error("ID –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —è—á–µ–π–∫–µ O30 –Ω–∞ –ª–∏—Å—Ç–µ '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'");

    const clusterData = WildberriesAPI.advert.getClusters(campaignId);

    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üöß –ö–ª–∞—Å—Ç–µ—Ä—ã');
    if (!sheet) throw new Error("–õ–∏—Å—Ç 'üöß –ö–ª–∞—Å—Ç–µ—Ä—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω.");

    sheet.clearContents();
    const headers = ["–ö–ª–∞—Å—Ç–µ—Ä", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"];
    const output = [headers];

    if (clusterData && clusterData.clusters) {
      clusterData.clusters.forEach(item => {
        output.push([item.cluster, item.count]);
      });
    }
    sheet.getRange(1, 1, output.length, output[0].length).setValues(output);
    Logger.log(`–ö–ª–∞—Å—Ç–µ—Ä—ã –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.`);
  } catch (e) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_words_clust: ${e.message}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –≤ get_words_clust: ${e.message}`);
  }
}

// ‚õî –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã - –£—Å—Ç–∞–Ω–æ–≤–∫–∞/—É–¥–∞–ª–µ–Ω–∏–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –º–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 1 –∑–∞–ø—Ä–æ—Å –≤ 6 —Å–µ–∫—É–Ω–¥.
// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑—ã –∏–∑ –∫–∞–º–ø–∞–Ω–∏–∏.
// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª—è–µ—Ç –∏–∑ –†–ö –≤—ã–±—Ä–∞–Ω–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —á–µ–∫-–±–æ–∫—Å–æ–≤

// –§–æ—Ä–º—É–ª—ã –¥–ª—è '‚õî –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã'
function setexcludedFormulas() { try {
    Ecommonkey.Wildberries.setexcludedFormulas(); }
    catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ setexcludedFormulas: " + error.message); }}

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å –ª–∏—Å—Ç–∞ '‚õî –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã'.
 * @returns {Array<string>} –ú–∞—Å—Å–∏–≤ —Ñ—Ä–∞–∑ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è.
 */
function _getPhrasesToExcludeFromSheet() {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚õî –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã');
    if (!sheet) {
        SpreadsheetApp.getUi().alert("–õ–∏—Å—Ç '‚õî –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return [];
    }
    const data = sheet.getRange("A2:B" + sheet.getLastRow()).getValues();
    const phrases = [];
    for (const row of data) {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è: —á–µ–∫–±–æ–∫—Å –≤ A, —Ñ—Ä–∞–∑–∞ –≤ B
        if (row[0] === true && row[1]) {
            phrases.push(row[1]);
        }
    }
    return phrases;
}

function set_excluded() {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–∑–æ–≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ—Ä–º—É–ª
    setexcludedFormulas();

    const campaignId = _getSelectedCampaignId();
    if (!campaignId) return;

    const phrasesToExclude = _getPhrasesToExcludeFromSheet();
    if (phrasesToExclude.length === 0) {
      SpreadsheetApp.getUi().alert("–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Ñ—Ä–∞–∑—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è.");
      return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    // API –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫, –ø–æ—ç—Ç–æ–º—É —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
    const currentExcluded = WildberriesAPI.advert.getExcludedPhrases(campaignId);
    const newExcludedSet = new Set([...currentExcluded, ...phrasesToExclude]);
    const finalExcludedList = Array.from(newExcludedSet);

    WildberriesAPI.advert.setExcludedPhrases(campaignId, finalExcludedList);

    SpreadsheetApp.getUi().alert(`–ú–∏–Ω—É—Å-—Ñ—Ä–∞–∑—ã –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId} –æ–±–Ω–æ–≤–ª–µ–Ω—ã.`);

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ set_excluded: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑: ${error.message}`);
  }
}

// ‚õî –£–¥–∞–ª–∏—Ç—å –º–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã
function delete_excluded() {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) return;

    const ui = SpreadsheetApp.getUi();
    const response = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', '–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑—ã?', ui.ButtonSet.YES_NO);
    if (response !== ui.Button.YES) return;

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑—ã
    WildberriesAPI.advert.setExcludedPhrases(campaignId, []);

    ui.alert(`–í—Å–µ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑—ã –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId} –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.`);
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ delete_excluded: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–∏–Ω—É—Å-—Ñ—Ä–∞–∑: ${error.message}`);
  }
}

// ‚è∏Ô∏è –ü–∞—É–∑–∞ –†–ö
// –ö–∞–º–ø–∞–Ω–∏–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ "9 - –∏–¥—É—Ç –ø–æ–∫–∞–∑—ã" - –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É, —Å–¥–µ–ª–∞–≤ GET –Ω–∞ /adv/v0/pause?id=***.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.

function advPause() {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) return;

    var ui = SpreadsheetApp.getUi();
    var response = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é ID ${campaignId} –Ω–∞ –ø–∞—É–∑—É?`, ui.ButtonSet.YES_NO);
    if (response !== ui.Button.YES) {
      return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    WildberriesAPI.advert.pauseCampaign(campaignId);

    Logger.log(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–∞—É–∑—É.`);
    ui.alert(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–∞—É–∑—É.`);

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ advPause: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞ –ø–∞—É–∑—É: ${error.message}`);
  }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Å—Ç–∞—Ç—É—Å–∞—Ö 4 - –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É –∏–ª–∏ 11 - –∫–∞–º–ø–∞–Ω–∏—è –Ω–∞ –ø–∞—É–∑–µ.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.
function advStart() {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) return;

    var ui = SpreadsheetApp.getUi();
    var response = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é ID ${campaignId}?`, ui.ButtonSet.YES_NO);
    if (response !== ui.Button.YES) {
      return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    WildberriesAPI.advert.startCampaign(campaignId);

    Logger.log(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.`);
    ui.alert(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.`);

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ advStart: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–∞–º–ø–∞–Ω–∏–∏: ${error.message}`);
  }
}

// –ú–∞—Å—Å–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—é–¥–∂–µ—Ç–∞ –†–ö –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
function get_advBudgetMass() {
  const status_kvo = 'emonkey_advert';
  const apiKey = getAPIStatus(status_kvo);
  WildberriesAPI.initialize({ advert: apiKey }); // Initialize once

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = spreadsheet.getSheetByName('üìÜ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –†–ö');
  const idRange = sheet.getRange('A2:A' + sheet.getLastRow()).getValues();
  const campaignIds = idRange.flat().filter(id => id);

  sheet.getRange('E2:E' + sheet.getLastRow()).clearContent();
  Logger.log('–û—á–∏—â–µ–Ω –¥–∏–∞–ø–∞–∑–æ–Ω E2:E');

  if (campaignIds.length === 0) {
    Logger.log('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö campaignId –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
    return;
  }

  campaignIds.forEach((campaignId, index) => {
    Logger.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ Campaign ID: ${campaignId}`);
    let attempts = 0;
    let success = false;
    while (attempts < 3 && !success) {
      try {
        const responseBody = WildberriesAPI.advert.getBudget(campaignId);
        const total = responseBody.total || 0;
        sheet.getRange(index + 2, 5).setValue(total); // Column E
        Logger.log(`ID ${campaignId}: —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –±—é–¥–∂–µ—Ç: ${total}‚ÇΩ`);
        success = true;
      } catch (error) {
        attempts++;
        Logger.log(`ID ${campaignId}: –ü–æ–ø—ã—Ç–∫–∞ ${attempts} - –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`);
        if (attempts >= 3) {
          Logger.log(`ID ${campaignId}: –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫.`);
        } else {
          Utilities.sleep(300); // Wait before retrying
        }
      }
    }
    Utilities.sleep(300); // Pause between IDs
  });
  Logger.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö Campaign ID –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
}

// –ê–≤—Ç–æ–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –†–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏
function depositAndStartCampaigns() {
  Logger.log('üìù –°–ø–∏—Å–æ–∫ –†–ö...'); get_advList(); Utilities.sleep(2000); Logger.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö...'); get_adverts(); Utilities.sleep(2000);
  Logger.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ—Ä–º—É–ª...'); setFormulasParaSettings(); Utilities.sleep(5000);
  Logger.log('üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—é–¥–∂–µ—Ç –†–ö...'); get_advBudgetMass(); Utilities.sleep(2000);
  Logger.log('üîÑ –ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è...'); massDepositAdv();
  Logger.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∫–∞–º–ø–∞–Ω–∏–π...'); Utilities.sleep(5000);
  Logger.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–∞–º–ø–∞–Ω–∏–π...'); startCampaignsMassiv(); Utilities.sleep(5000);
  Logger.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö...'); get_adverts();
}

function createDailyTriggerAdv() {
  const userEmail = Session.getActiveUser().getEmail();
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

  deleteDailyTriggerAdv(); // –£–¥–∞–ª–∏–º, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
  ScriptApp.newTrigger('depositAndStartCampaigns')
    .timeBased().atHour(8).everyDays(1)
    .create(); Logger.log('‚è∞ –¢—Ä–∏–≥–≥–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 5:00 –¥–ª—è depositAndStartCampaigns.');
    sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stat_get_stocks', userEmail]);
}

function deleteDailyTriggerAdv() {
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'depositAndStartCampaigns') {
      ScriptApp.deleteTrigger(trigger);  Logger.log('‚ùå –£–¥–∞–ª—ë–Ω —Ç—Ä–∏–≥–≥–µ—Ä: depositAndStartCampaigns');}
  });
}

// –ú–∞—Å—Å–æ–≤—ã–π –∑–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ "Address unavailable"
function startCampaignsMassiv() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected); if (!isConnected) return;

  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üìÜ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –†–ö');
  const data = sheet.getRange('A2:A' + sheet.getLastRow()).getValues();
  const status_kvo = 'emonkey_advert';
  const apiKey = getAPIStatus(status_kvo);
  WildberriesAPI.initialize({ advert: apiKey });

  const requestsPerSecond = 3;
  const delay = 1000 / requestsPerSecond;
  let lastRequestTime = Date.now();

  data.forEach((row, index) => {
    const campaignId = row[0];
    if (!campaignId) { Logger.log(`[${index + 2}] ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞`); return; }

    let attempt = 0;
    let success = false;

    while (attempt < 3 && !success) {
      attempt++;
      const timeSinceLast = Date.now() - lastRequestTime;
      if (timeSinceLast < delay) { Utilities.sleep(delay - timeSinceLast); }
      lastRequestTime = Date.now();

      try {
        WildberriesAPI.advert.startCampaign(campaignId);
        Logger.log(`[${index + 2}] ‚úÖ [–ó–∞–ø—É—Å–∫] –£—Å–ø–µ—à–Ω–æ ID: ${campaignId}`);
        success = true;
      } catch (e) {
        const errorMessage = e.message || '';
        if (errorMessage.includes("status 422")) {
          Logger.log(`[${index + 2}] ‚ö†Ô∏è [422] –°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω—ë–Ω –¥–ª—è ID: ${campaignId}`);
          success = true; // Don't retry
        } else if (errorMessage.includes("status 429")) {
          Logger.log(`[${index + 2}] ‚ö†Ô∏è [429] –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü—Ä–æ–ø—É—Å–∫ ID: ${campaignId}`);
          success = true; // Don't retry
        } else if (errorMessage.includes('Address unavailable')) {
          Logger.log(`[${index + 2}] ‚ùå [–ü–æ–ø—ã—Ç–∫–∞ ${attempt}] –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ ID ${campaignId}: ${errorMessage}`);
          if (attempt >= 3) {
            Logger.log(`[${index + 2}] üö´ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è ID ${campaignId}.`);
          } else {
            Utilities.sleep(1500);
          }
        } else {
          Logger.log(`[${index + 2}] ‚ùå [${e.message}] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ID: ${campaignId}`);
          success = true; // Don't retry on other unknown errors
        }
      }
    }
  });
}

// üíµ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å –±—é–¥–∂–µ—Ç –∫–∞–º–ø–∞–Ω–∏–∏.

function showDepositDialog() {
  var html = HtmlService.createHtmlOutputFromFile('deposit_form')
      .setWidth(400)
      .setHeight(300);
  SpreadsheetApp.getUi().showModalDialog(html, '–í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö');
}

function post_advDeposit(sum, type) {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) {
        SpreadsheetApp.getUi().alert("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∫–∞–º–ø–∞–Ω–∏–∏ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.");
        return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    WildberriesAPI.advert.depositToCampaign(campaignId, sum, type);

    SpreadsheetApp.getUi().alert(`–ë—é–¥–∂–µ—Ç –∫–∞–º–ø–∞–Ω–∏–∏ ${campaignId} —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${sum} ‚ÇΩ.`);
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ post_advDeposit: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞: ${error.message}`);
  }
}

// –ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –†–ö —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ "Address unavailable"
function massDepositAdv() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üìÜ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –†–ö');
  const lastRow = sheet.getLastRow();

  const data = sheet.getRange('A2:C' + lastRow).getValues();
  const budgetValues = sheet.getRange('E2:E' + lastRow).getValues();
  const threshold = sheet.getRange('E1').getValue();

  if (isNaN(threshold)) { Logger.log('‚ùå –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≤ E1 –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º. –û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ—Ä–æ–≥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞.'); return; }
  const typeCell = sheet.getRange('L1').getValue();
  const type = parseInt(typeCell, 10);
  if (isNaN(type)) { Logger.log('‚ùå –û—à–∏–±–∫–∞: –ó–Ω–∞—á–µ–Ω–∏–µ –≤ L1 –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º. –û–∂–∏–¥–∞–µ—Ç—Å—è —Ç–∏–ø –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0, 1, 3).'); return; }

  const status_kvo = 'emonkey_advert';
  const apiKey = getAPIStatus(status_kvo);
  WildberriesAPI.initialize({ advert: apiKey });

  data.forEach((row, index) => {
    const campaignId = row[0];
    const sum = row[2];
    const currentBudget = parseFloat(budgetValues[index][0]);

    if (!campaignId || !sum || isNaN(currentBudget)) {
      Logger.log(`[${index + 2}] ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: ID=${campaignId}, —Å—É–º–º–∞=${sum}, –±—é–¥–∂–µ—Ç=${currentBudget}`);
      return;
    }

    if (currentBudget >= threshold) {
      Logger.log(`[${index + 2}] ‚è© –ü—Ä–æ–ø—É—â–µ–Ω–æ: –±—é–¥–∂–µ—Ç (${currentBudget}‚ÇΩ) >= –ø–æ—Ä–æ–≥–∞ (${threshold}‚ÇΩ)`);
      return;
    }

    let attempt = 0;
    let success = false;

    while (attempt < 3 && !success) {
      attempt++;
      try {
        Logger.log(`[${index + 2}] üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –¥–ª—è ID: ${campaignId}`);
        const responseData = WildberriesAPI.advert.depositToCampaign(campaignId, sum, type);
        Logger.log(`[${index + 2}] ‚úÖ [–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ] –ü–æ–ø—ã—Ç–∫–∞ ${attempt}: ID: ${campaignId}, –û—Ç–≤–µ—Ç: ${JSON.stringify(responseData)}`);
        success = true;
      } catch (e) {
        Logger.log(`[${index + 2}] ‚ùå [–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ] –ü–æ–ø—ã—Ç–∫–∞ ${attempt}: –û—à–∏–±–∫–∞ ID ${campaignId}: ${e.message}`);
      }

      if (!success && attempt < 3) {
        Utilities.sleep(1200); // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
      }
    }
    if (!success) {
      Logger.log(`[${index + 2}] üö´ –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è ID ${campaignId} –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π.`);
    }
    Utilities.sleep(1200); // –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∫–∞–º–ø–∞–Ω–∏—è–º–∏
  });
  Logger.log('‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
}

// üíµ –ë–∞–ª–∞–Ω—Å –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—á—ë—Ç–µ, –±–∞–ª–∞–Ω—Å–µ –∏ –±–æ–Ω—É—Å–∞—Ö –ø—Ä–æ–¥–∞–≤—Ü–∞.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 1 –∑–∞–ø—Ä–æ—Å –≤ —Å–µ–∫—É–Ω–¥—É.
function get_advBalance() {
  try {
    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    const balanceData = WildberriesAPI.advert.getBalance();
    _updateBalanceSheet(balanceData);

    Utilities.sleep(1000);

    get_advBudget();

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: ' + error.message);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: ' + error.message);
  }
}

// üíµ –ë—é–¥–∂–µ—Ç –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—é–¥–∂–µ—Ç–µ
function get_advBudget() {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) {
      Logger.log("get_advBudget: –ö–∞–º–ø–∞–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –±—é–¥–∂–µ—Ç –Ω–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω.");
      return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    const budgetData = WildberriesAPI.advert.getBudget(campaignId);
    _updateBudgetSheet(campaignId, budgetData);

  } catch (error) {
    Logger.log(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ get_advBudget: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±—é–¥–∂–µ—Ç–∞: " + error.message);
  }
}

// ‚õî –ó–∞–≤–µ—Ä—à–∏—Ç—å –†–ö
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é, –Ω–∞—Ö–æ–¥—è—â—É—é—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ 9 –∏–ª–∏ 11 –∏–ª–∏ 4.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.

function advStop() {
  try {
    const campaignId = _getSelectedCampaignId();
    if (!campaignId) return;

    var ui = SpreadsheetApp.getUi();
    var response = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∫–∞–º–ø–∞–Ω–∏—é ID ${campaignId}?`, ui.ButtonSet.YES_NO);
    if (response !== ui.Button.YES) {
      return;
    }

    const apiKey = getAPIStatus('emonkey_advert');
    WildberriesAPI.initialize({ advert: apiKey });

    WildberriesAPI.advert.stopCampaign(campaignId);

    Logger.log(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.`);
    ui.alert(`–ö–∞–º–ø–∞–Ω–∏—è ${campaignId} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.`);

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ advStop: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–∞–º–ø–∞–Ω–∏–∏: ${error.message}`);
  }
}

// üíµ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É CPM —É –†–ö
// –ò–∑–º–µ–Ω–µ–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–º–ø–∞–Ω–∏–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ç—Ä–µ—Ö –º–∏–Ω—É—Ç.
// –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É.

function adv_cpm() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected);
  if (!isConnected) return;

  try {
    const status_kvo = 'emonkey_advert';
    const apiKey = getAPIStatus(status_kvo);  Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
    const credentials = Ecommonkey.Wildberries.getCampaignId(); if (!credentials) return;
    const campaignId = credentials.campaignId;
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º CPM —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const cpm = Ecommonkey.Wildberries.promptForCpm();  if (cpm === null) return;
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const nmRaw = Browser.inputBox("–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:", Browser.Buttons.OK_CANCEL);  if (nmRaw === 'cancel') return;

    const nmList = nmRaw
      .split(',')
      .map(str => parseInt(str.trim(), 10))
      .filter(nm => !isNaN(nm));

    if (nmList.length === 0) {  Browser.msgBox("‚õî –ù–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞."); return; }

    const Urls = Ecommonkey.Wildberries.getlinks();
    const apiUrl = `${Urls.advcpm}`;
    Ecommonkey.Wildberries.sendCpmRequestCPM(apiUrl, apiKey, campaignId, cpm, nmList);
  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);  SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message); }
}

// üóì –°—Ä–µ–¥–Ω—è—è –ø–æ–∑–∏—Ü–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ
function get_adv_booster() {
    const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
    const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (isConnected) {
    try { Logger.log('–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ get_adv_booster');
    var status_kvo = 'emonkey_advert'; Logger.log('–°—Ç–∞—Ç—É—Å KVO: ' + status_kvo);
    var apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
    var campaignData = Ecommonkey.Wildberries.getCampaignData(); if (!campaignData) { Logger.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–∏');return; }
    var advBoostSheet = campaignData.advBoostSheet; Logger.log('üóì –°—Ä–µ–¥–Ω—è—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏: ' + advBoostSheet.getName());
    const Urls = Ecommonkey.Wildberries.getlinks(); Logger.log('–ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏: ' + JSON.stringify(Urls));
    const apiUrl = `${Urls.advbooster}`; Logger.log('API URL: ' + apiUrl);
    var payload = campaignData.payload; Logger.log('Payload: ' + JSON.stringify(payload));
    const response = Ecommonkey.Wildberries.sendApiRequestBoost(apiUrl, apiKey, payload);
    if (response) {Ecommonkey.Wildberries.processApiResponseBoost(response, advBoostSheet);}}
    catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// üì¶ –°–∫–ª–∞–¥
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö WB. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç. –°–µ—Ä–≤–∏—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤,
// –ø–æ—ç—Ç–æ–º—É –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –Ω–∏—Ö –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç.

function get_stocks() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try { const status_kvo = 'emonkey_statistics';
  const apiKey = getAPIStatus(status_kvo);Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  const stocksSheet = Ecommonkey.Wildberries.setupStocksSheet();
  const { formattedFromDate, formattedToDate } = Ecommonkey.Wildberries.getDateRangestock();
  const Urls = Ecommonkey.Wildberries.getlinks();
  const apiUrl = `${Urls.statstocks + formattedFromDate + '&dateTo=' + formattedToDate + '&flag=1'}`;
  const headers = { 'Authorization': 'Bearer ' + apiKey };
  Ecommonkey.Wildberries.fetchStockData(apiUrl, headers, stocksSheet);}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);  SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// –û—Ç—á—ë—Ç –ø–æ –æ—Å—Ç–∞—Ç–∫–∞–º –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö 'üì¶ –°–∫–ª–∞–¥ –æ—Å—Ç–∞—Ç–∫–∏' –ù–æ–≤—ã–π –º–µ—Ç–æ–¥
// –°–æ–∑–¥–∞—ë—Ç –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á—ë—Ç–∞. –ü–æ–ª—É—á–∏–≤ ID –∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—á–µ—Ç.
// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã groupBy –∏ filter –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤ –ª—é–±–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ ‚Äî –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤–µ—Ä—Å–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.

function get_stocks_warehouseId() {
    const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
    const seePro = Ecommonkey.Wildberries.isConnected();
    const isConnected = seePro.includes(ids);
    Ecommonkey.Wildberries.checkConnection(isConnected);

    if (isConnected) {  try {
            var status_kvo = 'emonkey_supplies';
            var apiKey = getAPIStatus(status_kvo);
            Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
            const Urls = Ecommonkey.Wildberries.getlinks();
            const apiUrl = `${Urls.statstocks1}`;
            var downloadData = Ecommonkey.Wildberries.getStocksDataWarehouse(apiUrl, apiKey);
            if (downloadData) { Ecommonkey.Wildberries.writeToStocksSheetid(downloadData);}
        } catch (error) {
            Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);
            SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
        }
    }
}

// üì¶ –°–∫–ª–∞–¥ –ø–æ–¥—Ä–æ–±–Ω–æ 2
function get_stocks_warehouseIdV2() {
    const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
    const seePro = Ecommonkey.Wildberries.isConnected();
    const isConnected = seePro.includes(ids);
    Ecommonkey.Wildberries.checkConnection(isConnected);
    if (isConnected) { try {
            var status_kvo = 'emonkey_supplies';
            var apiKey = getAPIStatus(status_kvo);
            const Urls = Ecommonkey.Wildberries.getlinks();
            const apiUrl = `${Urls.statstocks1}`;
            var downloadData = Ecommonkey.Wildberries.getStocksDataWarehouseV2(apiUrl, apiKey);
            if (downloadData) {Ecommonkey.Wildberries.writeToStocksSheetidV2(downloadData);
            Ecommonkey.Wildberries.findWarehouseWithMaxStock();}
        } catch (error) {SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);}}
}

// üì¶ –°–∫–ª–∞–¥ –ø–æ–¥—Ä–æ–±–Ω–æ 3
function get_stocks_warehouseIdV3() {
    const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
    const seePro = Ecommonkey.Wildberries.isConnected();
    const isConnected = seePro.includes(ids);
    Ecommonkey.Wildberries.checkConnection(isConnected);
    if (isConnected) { try {
            var status_kvo = 'emonkey_supplies';
            var apiKey = getAPIStatus(status_kvo);
            const Urls = Ecommonkey.Wildberries.getlinks();
            const apiUrl = `${Urls.statstocks1}`;
            var downloadData = Ecommonkey.Wildberries.getStocksDataWarehouseV3(apiUrl, apiKey);
            if (downloadData) {Ecommonkey.Wildberries.writeToStocksSheetidV3(downloadData); }
        } catch (error) {SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞: ' + error.message);}}
}

// –ü—Ä–æ–¥–∞–∂–∏ üí≥
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç. 1 —Å—Ç—Ä–æ–∫–∞ = 1 –∑–∞–∫–∞–∑ = 1 –µ–¥–∏–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞. –î–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
// —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–µ srid. –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞ —Ö—Ä–∞–Ω—è—Ç—Å—è 90 –¥–Ω–µ–π –æ—Ç –¥–∞—Ç—ã –ø—Ä–æ–¥–∞–∂–∏

function get_sales() {
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è get_salesV1(), –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("setupPeriodSalesTrigger")
      .timeBased()
      .after(9 * 60 * 1000) // –ß–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
      .create();

  // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("clearTriggersSales")
      .timeBased()
      .after(30 * 60 * 1000) // –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
      .create();

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = spreadsheet.getSheetByName('üí≥ –ü—Ä–æ–¥–∞–∂–∏');
  if (sheet) sheet.clearContents(); // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–∏—Å—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã

  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try {var status_kvo = 'emonkey_statistics';
  var apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var { formattedFromDate, formattedToDate, salesSheet } = Ecommonkey.Wildberries.setupSalesSheet();
  const Urls = Ecommonkey.Wildberries.getlinks();
  const apiUrl = `${Urls.statsales + formattedFromDate + '&dateTo=' + formattedToDate + '&flag=0'}`;
  var headers = { 'Authorization': 'Bearer ' + apiKey };
  var response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
  var responseData = JSON.parse(response.getContentText()); console.log(JSON.stringify(responseData, null, 5));
  if (responseData && responseData.length > 0) {Ecommonkey.Wildberries.processSalesData(responseData, salesSheet); }
  else {Logger.log('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã–µ');}}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º —Ç—Ä–∏–≥–≥–µ—Ä–æ–º –∏ –∑–∞–ø—É—Å—Ç–∏—Ç get_salesV1(), –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞—Å—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
function setupPeriodSalesTrigger() {
  // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è get_salesV1() —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 10 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("get_salesV1")
      .timeBased()
      .everyMinutes(10)
      .create();

  get_salesV1(); // –°—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å get_salesV1()
function clearTriggersSales() {
  var triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(function(trigger) {
    var triggerFunction = trigger.getHandlerFunction();
    if (triggerFunction === "get_salesV1" || triggerFunction === "setupPeriodSalesTrigger" || triggerFunction === "clearTriggersSales") {  ScriptApp.deleteTrigger(trigger);  }
  });
}

function get_salesV1() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try {var status_kvo = 'emonkey_statistics';
  var apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var { formattedFromDate, formattedToDate, salesSheet } = Ecommonkey.Wildberries.setupSalesSheet();
  const Urls = Ecommonkey.Wildberries.getlinks();
  const apiUrl = `${Urls.statsales + formattedFromDate + '&dateTo=' + formattedToDate + '&flag=0'}`;
  var headers = {'Authorization': 'Bearer ' + apiKey };
  var response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
  var responseData = JSON.parse(response.getContentText()); console.log(JSON.stringify(responseData, null, 5));
  if (responseData && responseData.length > 0) {Ecommonkey.Wildberries.processSalesDataV1(responseData, salesSheet); }
  else {Logger.log('–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã–µ');}}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// –ó–∞–∫–∞–∑—ã üõí
// –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –±–æ–ª–µ–µ 90 –¥–Ω–µ–π –æ—Ç –¥–∞—Ç—ã –∑–∞–∫–∞–∑–∞.
// –î–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–∞ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–µ srid.
// 1 —Å—Ç—Ä–æ–∫–∞ = 1 –∑–∞–∫–∞–∑ = 1 –µ–¥–∏–Ω–∏—Ü–∞ —Ç–æ–≤–∞—Ä–∞.
// –ú–∞–∫—Å–∏–º—É–º 1 –∑–∞–ø—Ä–æ—Å –≤ –º–∏–Ω—É—Ç—É

/*/
function get_orders() {
  // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è get_ordersV1(), –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("setupPeriodOrderTrigger")
      .timeBased()
      .after(9 * 60 * 1000) // –ß–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
      .create();

  // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("clearTriggersOrder")
      .timeBased()
      .after(30 * 60 * 1000) // –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
      .create();

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = spreadsheet.getSheetByName('üõí –ó–∞–∫–∞–∑—ã');
  if (sheet) sheet.clearContents(); // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–∏—Å—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã

  const ids = spreadsheet.getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

  if (isConnected) {
    try {
      var status_kvo = 'emonkey_statistics';
      var apiKey = getAPIStatus(status_kvo);
      Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
      var { formattedFromDate, formattedToDate, orderSheet } = Ecommonkey.Wildberries.initializeOrderSheet();
      const Urls = Ecommonkey.Wildberries.getlinks();
      var lastChangeDate = formattedFromDate;
      var headers = { 'Authorization': 'Bearer ' + apiKey };
      var allOrders = [];

      while (true) {
        var apiUrl = `${Urls.statorder + lastChangeDate + '&dateTo=' + formattedToDate + '&flag=0'}`;
        var response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
        var responseData = JSON.parse(response.getContentText());
        if (!responseData || responseData.length === 0) break; // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
        allOrders = allOrders.concat(responseData);
        lastChangeDate = responseData[responseData.length - 1].lastChangeDate;}

      console.log(JSON.stringify(allOrders, null, 5));
      Ecommonkey.Wildberries.processResponseData(allOrders, orderSheet);
    } catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);}
  }
}
/*/

// –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞), –¥–æ–±–∞–≤–ª–µ–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ —Å –ø–æ–ø—ã—Ç–∫–æ–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ match(/\{[^{}]+\}/g)
function get_orders() {
  // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è get_ordersV1(), –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("setupPeriodOrderTrigger")
      .timeBased()
      .after(9 * 60 * 1000) // –ß–µ—Ä–µ–∑ 9 –º–∏–Ω—É—Ç
      .create();

  // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("clearTriggersOrder")
      .timeBased()
      .after(30 * 60 * 1000) // –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç
      .create();

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheet = spreadsheet.getSheetByName('üõí –ó–∞–∫–∞–∑—ã');
  if (sheet) sheet.clearContents(); // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ª–∏—Å—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã

  const ids = spreadsheet.getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

  if (isConnected) {
    try {
      const status_kvo = 'emonkey_statistics';
      const apiKey = getAPIStatus(status_kvo);
      Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);

      const { formattedFromDate, formattedToDate, orderSheet } = Ecommonkey.Wildberries.initializeOrderSheet();
      const Urls = Ecommonkey.Wildberries.getlinks();
      const headers = { 'Authorization': 'Bearer ' + apiKey };
      let lastChangeDate = formattedFromDate;
      let allOrders = [];

      while (true) {
        const apiUrl = `${Urls.statorder}${lastChangeDate}&dateTo=${formattedToDate}&flag=0`;
        Logger.log("–ó–∞–ø—Ä–æ—Å –∫ API: " + apiUrl);

        try {
          const response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
          const text = response.getContentText();
          let responseData;

          try {
            responseData = JSON.parse(text);
            Logger.log("–£—Å–ø–µ—à–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ JSON. –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: " + responseData.length);
          } catch (jsonError) {
            Logger.log("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: " + jsonError);
            Logger.log("–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–æ–±—Ä–µ–∑–∞–Ω–æ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤): " + text.substring(0, 1000));

            try {
              const matches = text.match(/\{[^{}]+\}/g);

              if (!matches || matches.length === 0) {
                throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞–ª–∏–¥–Ω—ã–µ JSON-–æ–±—ä–µ–∫—Ç—ã –≤ –æ—Ç–≤–µ—Ç–µ");
              }

              const fixedJson = '[' + matches.join(',') + ']';
              responseData = JSON.parse(fixedJson);
              Logger.log("–£—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: " + responseData.length + " –∏–∑ " + matches.length);
            } catch (partialError) {
              Logger.log("–û—à–∏–±–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è JSON: " + partialError);
              break;
            }
          }

          if (!responseData || responseData.length === 0) {
            Logger.log("–ü—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª.");
            break;
          }

          allOrders = allOrders.concat(responseData);
          lastChangeDate = responseData[responseData.length - 1].lastChangeDate;
          Logger.log("–¢–µ–∫—É—â–∞—è –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: " + allOrders.length);
          Logger.log("–°–ª–µ–¥—É—é—â–∏–π lastChangeDate: " + lastChangeDate);

        } catch (requestError) {
          Logger.log("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: " + requestError);
          break;
        }
      }

      Logger.log("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: " + allOrders.length);
      Logger.log(JSON.stringify(allOrders.slice(0, 5), null, 2)); // –ª–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 –∑–∞–∫–∞–∑–æ–≤
      Ecommonkey.Wildberries.processResponseData(allOrders, orderSheet);

    } catch (error) {
      Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);
    }
  }
}

// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º —Ç—Ä–∏–≥–≥–µ—Ä–æ–º –∏ –∑–∞–ø—É—Å—Ç–∏—Ç get_ordersV1(), –∞ —Ç–∞–∫–∂–µ —Å–æ–∑–¥–∞—Å—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
function setupPeriodOrderTrigger() {
  // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è get_ordersV1() —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 10 –º–∏–Ω—É—Ç
  ScriptApp.newTrigger("get_ordersV1")
      .timeBased()
      .everyMinutes(10)
      .create();
  get_ordersV1(); // –°—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å get_ordersV1()
function clearTriggersOrder() {
  var triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(function(trigger) {
    var triggerFunction = trigger.getHandlerFunction();
    if (triggerFunction === "get_ordersV1" || triggerFunction === "setupPeriodOrderTrigger" || triggerFunction === "clearTriggersOrder") {
      ScriptApp.deleteTrigger(trigger);
    }
  });
}

/*/
function get_ordersV1() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
    try {
      var status_kvo = 'emonkey_statistics';
      var apiKey = getAPIStatus(status_kvo);
      Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
      var { formattedFromDate, formattedToDate, orderSheet } = Ecommonkey.Wildberries.initializeOrderSheet();
      const Urls = Ecommonkey.Wildberries.getlinks();
      var lastChangeDate = formattedFromDate;
      var headers = { 'Authorization': 'Bearer ' + apiKey };
      var allOrders = [];

      while (true) {
        var apiUrl = `${Urls.statorder + lastChangeDate + '&dateTo=' + formattedToDate + '&flag=0'}`;
        var response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
        var responseData = JSON.parse(response.getContentText());
        if (!responseData || responseData.length === 0) break; // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã
        allOrders = allOrders.concat(responseData);
        lastChangeDate = responseData[responseData.length - 1].lastChangeDate;
      }

      console.log(JSON.stringify(allOrders, null, 5));
      Ecommonkey.Wildberries.processResponseDataV1(allOrders, orderSheet);
    } catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);}
  }
}
/*/

function get_ordersV1() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

  if (isConnected) {
    try {
      const status_kvo = 'emonkey_statistics';
      const apiKey = getAPIStatus(status_kvo);
      Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);

      const { formattedFromDate, formattedToDate, orderSheet } = Ecommonkey.Wildberries.initializeOrderSheet();
      const Urls = Ecommonkey.Wildberries.getlinks();
      const headers = { 'Authorization': 'Bearer ' + apiKey };
      let lastChangeDate = formattedFromDate;
      let allOrders = [];

      while (true) {
        const apiUrl = `${Urls.statorder}${lastChangeDate}&dateTo=${formattedToDate}&flag=0`;
        Logger.log("–ó–∞–ø—Ä–æ—Å –∫ API: " + apiUrl);

        try {
          const response = UrlFetchApp.fetch(apiUrl, { headers: headers, method: 'get' });
          const text = response.getContentText();
          let responseData;

          try {
            responseData = JSON.parse(text);
            Logger.log("–£—Å–ø–µ—à–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ JSON. –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: " + responseData.length);
          } catch (jsonError) {
            Logger.log("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: " + jsonError);
            Logger.log("–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–æ–±—Ä–µ–∑–∞–Ω–æ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤): " + text.substring(0, 1000));

            try {
              const matches = text.match(/\{[^{}]+\}/g);

              if (!matches || matches.length === 0) {
                throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞–ª–∏–¥–Ω—ã–µ JSON-–æ–±—ä–µ–∫—Ç—ã –≤ –æ—Ç–≤–µ—Ç–µ");
              }

              const fixedJson = '[' + matches.join(',') + ']';
              responseData = JSON.parse(fixedJson);
              Logger.log("–£—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: " + responseData.length + " –∏–∑ " + matches.length);
            } catch (partialError) {
              Logger.log("–û—à–∏–±–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è JSON: " + partialError);
              break;
            }
          }

          if (!responseData || responseData.length === 0) {
            Logger.log("–ü—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª.");
            break;
          }

          allOrders = allOrders.concat(responseData);
          lastChangeDate = responseData[responseData.length - 1].lastChangeDate;
          Logger.log("–¢–µ–∫—É—â–∞—è –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: " + allOrders.length);
          Logger.log("–°–ª–µ–¥—É—é—â–∏–π lastChangeDate: " + lastChangeDate);

        } catch (requestError) {
          Logger.log("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: " + requestError);
          break;
        }
      }

      Logger.log("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: " + allOrders.length);
      Logger.log("–ü–µ—Ä–≤—ã–µ 5 –∑–∞–∫–∞–∑–æ–≤ (–æ–±—Ä–µ–∑–∞–Ω–æ): " + JSON.stringify(allOrders.slice(0, 5), null, 2));
      Ecommonkey.Wildberries.processResponseDataV1(allOrders, orderSheet);

    } catch (error) {
      Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);
    }
  }
}

// üöö –ü–æ—Å—Ç–∞–≤–∫–∏
// –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –ø–æ—Å—Ç–∞–≤–∫–µ.
// –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ RFC3339. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞—Ç—É –∏–ª–∏ –¥–∞—Ç—É —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º. –í—Ä–µ–º—è –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ —Å–µ–∫—É–Ω–¥ –∏–ª–∏ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥.
// –í—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –ú—Å–∫ (UTC+3).
// –ü—Ä–∏–º–µ—Ä—ã:
// 2019-06-20
// 2019-06-20T23:59:59
// 2019-06-20T00:00:00.12345
// 2017-03-25T00:00:00

function get_incomes() {
  try {
    const apiKey = getAPIStatus('emonkey_statistics');
    WildberriesAPI.initialize({ statistics: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤–æ–∫ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ AQ38/AR38
    const { from: dateFrom } = _getDateRangeFromSettings('AQ38', 'AR38');

    const incomes = WildberriesAPI.statistics.getIncomes(dateFrom);

    const sheet = _setupSheet('üöö –ü–æ—Å—Ç–∞–≤–∫–∏', [
      '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏', '–î–∞—Ç–∞', '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–ê—Ä—Ç–∏–∫—É–ª', '–†–∞–∑–º–µ—Ä', '–ë–∞—Ä–∫–æ–¥',
      '–ö–æ–ª-–≤–æ', '–û–±—â–∞—è —Ü–µ–Ω–∞', '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞', '–°–∫–ª–∞–¥', 'nmID', '–ü—Ä–µ–¥–º–µ—Ç', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ë—Ä–µ–Ω–¥'
    ]);

    if (incomes && incomes.length > 0) {
      const output = incomes.map(i => [
        i.incomeId, i.date, i.lastChangeDate, i.supplierArticle, i.techSize, i.barcode,
        i.quantity, i.totalPrice, i.dateClose, i.warehouseName, i.nmId, i.subject, i.category, i.brand
      ]);
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} –ø–æ—Å—Ç–∞–≤–æ–∫.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–∞–≤–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_incomes: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤–æ–∫: ${error.message}`);
  }
}

// üìä –û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
// –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–º—É –æ—Ç—á—ë—Ç—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –î–æ—Å—Ç—É–ø–Ω—ã –¥–∞–Ω–Ω—ã–µ, –Ω–∞—á–∏–Ω–∞—è —Å 29 —è–Ω–≤–∞—Ä—è 2024 –≥–æ–¥–∞. –ú–∞–∫—Å–∏–º—É–º 1 –∑–∞–ø—Ä–æ—Å –≤ –º–∏–Ω—É—Ç—É.
// –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –º–µ—Ç–æ–¥ –≤–µ—Ä–Ω–µ—Ç [].
// limit	Default: 100000 –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –æ—Ç—á–µ—Ç–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –º–µ—Ç–æ–¥–æ–º. –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 100000.

function get_DetailByPeriod() {
    const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
    const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (isConnected) {
    try { const status_kvo = 'emonkey_statistics';
    const apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    const byPeriodSheet = spreadsheet.getSheetByName('üìä –û—Ç—á–µ—Ç –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏');
    Ecommonkey.Wildberries.clearSheet(byPeriodSheet);
    const headers = Ecommonkey.Wildberries.getHeaders(); Ecommonkey.Wildberries.setHeaders(byPeriodSheet, headers);
    const { fromDate, toDate } = Ecommonkey.Wildberries.getDateRange(spreadsheet);
    const formattedDates = Ecommonkey.Wildberries.formatDates(fromDate, toDate);
    const arr = fetchData(formattedDates.from, formattedDates.to, apiKey, seePro);
    if (arr.length > 0) {
        const numRows = arr.length;
        const numCols = arr[0].length;
        const lastRow = byPeriodSheet.getMaxRows();
        const lastCol = byPeriodSheet.getMaxColumns();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ç—Ä–æ–∫ –Ω–∞ –ª–∏—Å—Ç–µ
        if (numRows > (lastRow - 1)) { // –î–æ–±–∞–≤–ª—è–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, —á—Ç–æ–±—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤—É
        byPeriodSheet.insertRowsAfter(lastRow, numRows - (lastRow - 1));}
        byPeriodSheet.getRange(2, 1, numRows, numCols).setValues(arr);}
        else {Logger.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏.');}}
        catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

function fetchData(formattedFromDate, formattedToDate, apiKey) {
    const limit = 10000;
    let rrdid = 0;
    const arr = [];
    const Urls = Ecommonkey.Wildberries.getlinks(); const apiUrl = `${Urls.statrealize}`;
    try {
        while (true) {
            const url_reports = `${apiUrl}?dateFrom=${formattedFromDate}&dateTo=${formattedToDate}&limit=${limit}&rrdid=${(rrdid ? rrdid + 1 : 0)}`; Logger.log(url_reports);
            const response = Ecommonkey.Wildberries.request(url_reports, 'get', apiKey); Logger.log(response);
            if (response.length === 0) {break;} arr.push(...Ecommonkey.Wildberries.parseResponse(response));
            if (response.length < limit) {break;} else {rrdid = response[response.length - 1].rrd_id;}}
    } catch (error) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: ' + error); Browser.msgBox('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ' + error.message);}
    return arr;}

// üõÑ –¢–æ–≤–∞—Ä—ã - –°–ø–∏—Å–æ–∫ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä (–ù–ú)
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ù–ú —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Ä–∞–∑–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.

function get_card_list() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try {const status_kvo = 'emonkey_content';
  const apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  const Urls = Ecommonkey.Wildberries.getlinks(); const url = `${Urls.contcardlist}`;
  let { cursor, allCards, requestCount } = Ecommonkey.Wildberries.initializeParametersCardList();
  Ecommonkey.Wildberries.fetchCardData(url, apiKey, cursor, allCards, requestCount);}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// üõÑ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –ø–æ –µ–≥–æ –∞—Ä—Ç–∏–∫—É–ª—É. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±–æ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–∞—Ö, –æ—Å—Ç–∞–≤—å—Ç–µ –∞—Ä—Ç–∏–∫—É–ª –ø—É—Å—Ç—ã–º

function get_list_goods() {
    try {
        const apiKey = getAPIStatus('emonkey_content');
        WildberriesAPI.initialize({ content: apiKey });

        const priceInfo = WildberriesAPI.content.getPriceInfo();

        const sheet = _setupSheet('üõÑ –ò–Ω—Ñ–æ –æ —Ü–µ–Ω–∞—Ö', [
            'nmID', '–¶–µ–Ω–∞', '–°–∫–∏–¥–∫–∞', '–ü—Ä–æ–º–æ-–∫–æ–¥'
        ]);

        if (priceInfo && priceInfo.length > 0) {
            const output = priceInfo.map(p => [
                p.nmId, p.price, p.discount, p.promoCode
            ]);
            sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
            Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω–∞—Ö –¥–ª—è ${output.length} —Ç–æ–≤–∞—Ä–æ–≤.`);
        } else {
            Logger.log("–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏.");
        }
    } catch (error) {
        Logger.log(`–û—à–∏–±–∫–∞ –≤ get_list_goods: ${error.message}\n${error.stack}`);
        SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–Ω–∞—Ö: ${error.message}`);
    }
}

// üõÑ –¢–æ–≤–∞—Ä—ã WB
// –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é —Å —Å–∞–π—Ç–∞
function sppProductDetails() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try { const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const productSheet = spreadsheet.getSheetByName("üõÑ –¢–æ–≤–∞—Ä—ã");
  if (!productSheet) { Logger.log("–õ–∏—Å—Ç 'üõÑ –¢–æ–≤–∞—Ä—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω."); return; }
  get_card_list(); Utilities.sleep(1000);
  get_list_goods(); Utilities.sleep(1000);
  const nmIds = productSheet.getRange("A2:A").getValues().flat().filter(Boolean);
  const allRows = [];
  Ecommonkey.Wildberries.setparamProductData(nmIds, allRows, seePro);
  const sheet = spreadsheet.getSheetByName("üõÑ –¢–æ–≤–∞—Ä—ã WB");
  if (!sheet) { Logger.log("–õ–∏—Å—Ç 'üõÑ –¢–æ–≤–∞—Ä—ã WB' –Ω–µ –Ω–∞–π–¥–µ–Ω."); return; }
  sheet.getRange("A:X").clearContent();
  const headers = ['ID –ø—Ä–æ–¥—É–∫—Ç–∞', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–ë—Ä–µ–Ω–¥', '–¶–≤–µ—Ç', '–†–∞–∑–º–µ—Ä', '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞', '–¶–µ–Ω–∞ (basic)', '–¶–µ–Ω–∞ (product)', 'ID —Å–∫–ª–∞–¥–∞', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', '–ü—Ä–µ–¥–º–µ—Ç', '–†–µ–π—Ç–∏–Ω–≥ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–†–µ–π—Ç–∏–Ω–≥ –æ—Ç–∑—ã–≤–æ–≤', '–ö–æ–ª-–≤–æ —Ñ–æ—Ç–æ', '–ö–æ–ª-–≤–æ –æ—Ç–∑—ã–≤–æ–≤', 'ID –∞–∫—Ü–∏–∏', '–í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏', '–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏'];
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  if (allRows.length > 0) {sheet.getRange(2, 1, allRows.length, allRows[0].length).setValues(allRows);
  Ecommonkey.Wildberries.delete_empty_columns_goods_wb();}
  Ecommonkey.Wildberries.setFormulasParaWb(); Logger.log("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –ª–∏—Å—Ç 'üõÑ –¢–æ–≤–∞—Ä—ã WB'.");}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID —Å–∫–ª–∞–¥–æ–≤ —Å –ª–∏—Å—Ç–∞ 'üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤'.
 * @returns {Array<number>} –ú–∞—Å—Å–∏–≤ ID —Å–∫–ª–∞–¥–æ–≤.
 */
function _getWarehouseIdsFromSheet() {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤');
    if (!sheet) {
        SpreadsheetApp.getUi().alert("–õ–∏—Å—Ç 'üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ get_stock_list().");
        return [];
    }
    const lastRow = sheet.getLastRow();
    if (lastRow < 2) return [];
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ ID –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ A
    return sheet.getRange(`A2:A${lastRow}`).getValues().flat().filter(id => id);
}

// üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø—Ä–∏—ë–º–∫–∏
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø—Ä–∏—ë–º–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 14 –¥–Ω–µ–π.
// –ú–∞–∫—Å–∏–º—É–º 6 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
function get_coefficient() {
  try {
    const apiKey = getAPIStatus('emonkey_supplies');
    WildberriesAPI.initialize({ supplies: apiKey });

    const warehouseIds = _getWarehouseIdsFromSheet();
    if (warehouseIds.length === 0) {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω—ã ID —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤.");
      return;
    }

    const coefficientsData = WildberriesAPI.supplies.getWarehouseCoefficients(warehouseIds);

    const sheet = _setupSheet('üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã', ['–î–∞—Ç–∞', '–°–∫–ª–∞–¥ ID', '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–∏–µ–º–∫–∏']);

    if (coefficientsData && coefficientsData.length > 0) {
        const output = [];
        coefficientsData.forEach(data => {
            if(data.warehouseCoefficients && data.warehouseCoefficients.length > 0){
                data.warehouseCoefficients.forEach(coef => {
                    output.push([data.date, coef.warehouseId, coef.coefficient]);
                });
            }
        });

        if(output.length > 0) {
            sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
            Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Å—Ç—Ä–æ–∫ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤.`);
        } else {
            Logger.log("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º –¥–ª—è –∑–∞–ø–∏—Å–∏.");
        }
    } else {
      Logger.log("–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º –æ—Ç API.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_coefficient: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤: ${error.message}`);
  }
}

// üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ Wildberries.
// –ú–∞–∫—Å–∏–º—É–º 6 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É

function get_stock_list() {
  try {
    const apiKey = getAPIStatus('emonkey_supplies');
    WildberriesAPI.initialize({ supplies: apiKey });

    const warehouses = WildberriesAPI.supplies.getWarehouses();

    const sheet = _setupSheet('üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤', ['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞']);

    if (warehouses && warehouses.length > 0) {
      const output = warehouses.map(w => [w.id, w.name]);
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Å–∫–ª–∞–¥–æ–≤ –≤ –ª–∏—Å—Ç 'üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤'.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_stock_list: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤: ${error.message}`);
  }
}

// —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç üì¶ ID —Å–∫–ª–∞–¥–æ–≤ WB
// –ó–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤–Ω–µ—à–∫–∏
function stocksid_refresh() {
  try {Ecommonkey.Wildberries.stocksid_refresh(); }
  catch (error) { Logger.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ stocksid_refresh: " + error.message); }}

// üõçÔ∏è –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂
// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ö–¢ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –ø–æ nmID/–ø—Ä–µ–¥–º–µ—Ç–∞–º/–±—Ä–µ–Ω–¥–∞–º/—Ç–µ–≥–∞–º
// –ü–æ–ª—è brandNames,objectIDs, tagIDs, nmIDs –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏, —Ç–æ–≥–¥–∞ –≤ –æ—Ç–≤–µ—Ç–µ –∏–¥—É—Ç –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü–∞.
// –¢–∞–∫–∂–µ –≤ –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –ø–µ—Ä–∏–æ–¥—É:
// –í previousPeriod –¥–∞–Ω–Ω—ã–µ –∑–∞ —Ç–∞–∫–æ–π –∂–µ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ –∏ –≤ selectedPeriod.

function get_nmId() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try {var status_kvo = 'emonkey_analytics'; // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å
  var apiKey = getAPIStatus(status_kvo);
  Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var { formattedFromDate1, formattedToDate1 } = Ecommonkey.Wildberries.getFormattedDatesNmID();
  const apiUrl = `${Ecommonkey.Wildberries.getlinks().djemnm}`;
  Ecommonkey.Wildberries.fetchDataFromAPInmid(apiUrl, apiKey, formattedFromDate1, formattedToDate1);}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// üõçÔ∏è –í–æ—Ä–æ–Ω–∫–∞ –ø–æ –¥–Ω—è–º - –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂
// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ö–¢ –ø–æ –¥–Ω—è–º –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º nmID. –ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç –º–∞–∫—Å–∏–º—É–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é.
// –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –æ—Ç—á—ë—Ç—ã –∑–∞ –ø–µ—Ä–∏–æ–¥ –¥–æ –≥–æ–¥–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –î–∂–µ–º.
// –ú–∞–∫—Å–∏–º—É–º 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–∏–Ω—É—Ç—É.
// https://openapi.wb.ru/analytics/api/ru/#tag/Voronka-prodazh/paths/~1api~1v2~1nm-report~1detail~1history/post

function get_nmId_days() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try {var status_kvo = 'emonkey_analytics';
  var apiKey = getAPIStatus(status_kvo);
  Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var { formattedFromDate1, formattedToDate1 } = Ecommonkey.Wildberries.getFormattedDatesNmDays();
  const Urls = Ecommonkey.Wildberries.getlinks();const apiUrl = `${Urls.djemnmdays}`;
  var responseData = Ecommonkey.Wildberries.dataFromApiNmDay(apiKey, apiUrl, formattedFromDate1, formattedToDate1);
  if (responseData) {Ecommonkey.Wildberries.initializeNmIdaySheet(); Ecommonkey.Wildberries.processCardsNmDays(responseData.data);}}
  catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error); SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);}
  }
}

// ü™ß –ö–æ–º–∏—Å—Å–∏–∏
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–∏—Å—Å–∏—é WB –ø–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –º–æ–¥–µ–ª–∏ –ø—Ä–æ–¥–∞–∂.
function get_commissions() {
  try {
    const apiKey = getAPIStatus('emonkey_analytics');
    WildberriesAPI.initialize({ analytics: apiKey });

    const commissions = WildberriesAPI.analytics.getCommissions();

    const sheet = _setupSheet('ü™ß –ö–æ–º–∏—Å—Å–∏–∏', ['–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ü—Ä–µ–¥–º–µ—Ç', '–ö–æ–º–∏—Å—Å–∏—è FBS', '–ö–æ–º–∏—Å—Å–∏—è FBO']);

    if (commissions && commissions.length > 0) {
      const output = commissions.map(c => [
        c.category_name, c.subject_name, c.fbs, c.fbo
      ]);
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Å—Ç—Ä–æ–∫ –∫–æ–º–∏—Å—Å–∏–π.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–º–∏—Å—Å–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_commissions: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∏—Å—Å–∏–π: ${error.message}`);
  }
}

// üì¶ –¢–∞—Ä–∏—Ñ—ã –∫–æ—Ä–æ–±–∞ - –¢–∞—Ä–∏—Ñ—ã –¥–ª—è –∫–æ—Ä–æ–±–æ–≤ / –ú–∞–∫—Å–∏–º—É–º ‚Äî 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É.
// –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥ –≤ –∫–æ—Ä–æ–±–∞—Ö (–∫–æ—Ä–æ–±–∫–∞—Ö), –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å:
// –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –∏–ª–∏ –ø—É–Ω–∫—Ç–∞ –ø—Ä–∏—ë–º–∞ –¥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è;
// –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –¥–æ –ø—É–Ω–∫—Ç–∞ –ø—Ä–∏—ë–º–∞;
// —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ Wildberries.

function get_tariffsbox() {
    try {
        const apiKey = getAPIStatus('emonkey_analytics');
        WildberriesAPI.initialize({ analytics: apiKey });

        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç–∞ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —è—á–µ–π–∫–µ AQ39
        const { from: date } = _getDateRangeFromSettings('AQ39', 'AQ39');

        const tariffs = WildberriesAPI.analytics.getBoxTariffs(date);

        const sheet = _setupSheet('üì¶ –¢–∞—Ä–∏—Ñ—ã –∫–æ—Ä–æ–±–∞', ['–°–∫–ª–∞–¥', '–î–æ—Å—Ç–∞–≤–∫–∞ (–∫–æ—Ä–æ–±)', '–•—Ä–∞–Ω–µ–Ω–∏–µ (–∫–æ—Ä–æ–±)']);

        if (tariffs && tariffs.length > 0) {
            const output = tariffs.map(t => [
                t.warehouse, t.deliveryKgt, t.storageKgt
            ]);
            sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
            Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –∫–æ—Ä–æ–±–æ–≤.`);
        } else {
            Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –∫–æ—Ä–æ–±–æ–≤.");
        }
    } catch (error) {
        Logger.log(`–û—à–∏–±–∫–∞ –≤ get_tariffsbox: ${error.message}\n${error.stack}`);
        SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –∫–æ—Ä–æ–±–æ–≤: ${error.message}`);
    }
}

// üì¶ –¢–∞—Ä–∏—Ñ—ã –ø–∞–ª–ª–µ—Ç—ã - –¢–∞—Ä–∏—Ñ—ã –¥–ª—è –º–æ–Ω–æ–ø–∞–ª–ª–µ—Ç / –ú–∞–∫—Å–∏–º—É–º ‚Äî 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É.
// –î–ª—è —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥ Wildberries –Ω–∞ –º–æ–Ω–æ–ø–∞–ª–ª–µ—Ç–∞—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å:
// –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ —Å–∫–ª–∞–¥–∞ –¥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è;
// –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –¥–æ —Å–∫–ª–∞–¥–∞;
// —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ —Å–∫–ª–∞–¥–µ Wildberries.

function get_tariffpallet() {
  try {
    const apiKey = getAPIStatus('emonkey_analytics');
    WildberriesAPI.initialize({ analytics: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç–∞ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —è—á–µ–π–∫–µ AQ40
    const { from: date } = _getDateRangeFromSettings('AQ40', 'AQ40');

    const tariffs = WildberriesAPI.analytics.getPalletTariffs(date);

    const sheet = _setupSheet('üì¶ –¢–∞—Ä–∏—Ñ—ã –ø–∞–ª–ª–µ—Ç—ã', [
        '–°–∫–ª–∞–¥', '–î–æ—Å—Ç–∞–≤–∫–∞ (–ø–∞–ª–ª–µ—Ç–∞)', '–•—Ä–∞–Ω–µ–Ω–∏–µ (–ø–∞–ª–ª–µ—Ç–∞)'
    ]);

    if (tariffs && tariffs.length > 0) {
        const output = tariffs.map(t => [
            t.warehouse, t.delivery, t.storage
        ]);
        sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
        Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –ø–∞–ª–ª–µ—Ç.`);
    } else {
        Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –ø–∞–ª–ª–µ—Ç.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_tariffpallet: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –ø–∞–ª–ª–µ—Ç: ${error.message}`);
  }
}

// üì¶ –¢–∞—Ä–∏—Ñ—ã –≤–æ–∑–≤—Ä–∞—Ç—ã / –¢–∞—Ä–∏—Ñ—ã –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç / –ú–∞–∫—Å–∏–º—É–º ‚Äî 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É.
function get_tariffreturn() {
  try {
    const apiKey = getAPIStatus('emonkey_analytics');
    WildberriesAPI.initialize({ analytics: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç–∞ –¥–ª—è —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —è—á–µ–π–∫–µ AQ41
    const { from: date } = _getDateRangeFromSettings('AQ41', 'AQ41');

    const tariffs = WildberriesAPI.analytics.getReturnTariffs(date);

    const sheet = _setupSheet('üì¶ –¢–∞—Ä–∏—Ñ—ã –≤–æ–∑–≤—Ä–∞—Ç—ã', [
        '–°–∫–ª–∞–¥', '–î–æ—Å—Ç–∞–≤–∫–∞ (–≤–æ–∑–≤—Ä–∞—Ç)', '–•—Ä–∞–Ω–µ–Ω–∏–µ (–≤–æ–∑–≤—Ä–∞—Ç)'
    ]);

    if (tariffs && tariffs.length > 0) {
        const output = tariffs.map(t => [
            t.warehouse, t.delivery, t.storage
        ]);
        sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
        Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç—ã.`);
    } else {
        Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç—ã.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_tariffreturn: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç—ã: ${error.message}`);
  }
}

// üßë‚Äçüíª –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –∫–æ–ª-–≤–æ
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è, –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è, –∏ —Å—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤.

function unanswered_feedbacks() {
  try {
    const apiKey = getAPIStatus('emonkey_feedbacks');
    WildberriesAPI.initialize({ feedbacks: apiKey });

    const data = WildberriesAPI.feedbacks.getUnansweredCount();

    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üì¢ –û—Ç–∑—ã–≤—ã'); // Assumption
    if (sheet) {
      // Assuming the count is written to a specific cell, e.g., B1, with a label in A1.
      sheet.getRange('A1').setValue('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:');
      sheet.getRange('B1').setValue(data.count);
      Logger.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤: ${data.count}`);
    } else {
      Logger.log("–õ–∏—Å—Ç 'üì¢ –û—Ç–∑—ã–≤—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ unanswered_feedbacks: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–∑—ã–≤–æ–≤: ${error.message}`);
  }
}

// üì¢ –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ —Å –≤—ã–±–æ—Ä–æ–º
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.

function startFeedbacks() {
  var html = HtmlService.createHtmlOutputFromFile('SelectIsAnswered')
      .setWidth(400)
      .setHeight(400);
  SpreadsheetApp.getUi().showModalDialog(html, '–í—ã–±–æ—Ä —Ç–∏–ø–∞ –æ—Ç–∑—ã–≤–æ–≤');
}

function feedbacks(isAnsweredInput) {
  try {
    const isAnswered = (isAnsweredInput === 'true');
    const apiKey = getAPIStatus('emonkey_feedbacks');
    WildberriesAPI.initialize({ feedbacks: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ AQ36/AR36
    const { from: dateFrom, to: dateTo } = _getDateRangeFromSettings('AQ36', 'AR36');

    const sheetName = 'üì¢ –û—Ç–∑—ã–≤—ã';
    const headers = [
      'ID', '–ê–≤—Ç–æ—Ä', '–¢–µ–∫—Å—Ç', '–û—Ü–µ–Ω–∫–∞', '–î–∞—Ç–∞', '–°—Ç–∞—Ç—É—Å', '–û—Ç–≤–µ—á–µ–Ω',
      '–ê—Ä—Ç–∏–∫—É–ª WB', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–ë—Ä–µ–Ω–¥', '–†–∞–∑–º–µ—Ä', '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω', '–§–æ—Ç–æ'
    ];
    const sheet = _setupSheet(sheetName, headers);

    // take=5000, skip=0, order='dateDesc'
    const feedbacksData = WildberriesAPI.feedbacks.getFeedbacks(isAnswered, dateFrom, dateTo, 5000, 0, 'dateDesc');

    if (feedbacksData && feedbacksData.length > 0) {
      const output = feedbacksData.map(f => {
        const photoLinks = (f.photoLinks || []).map(p => `=IMAGE("${p.fullSize}")`).join(' ');
        return [
          f.id,
          f.userName,
          f.text,
          f.productValuation,
          new Date(f.createdDate).toLocaleString(),
          f.state,
          f.answer ? '–î–∞' : '–ù–µ—Ç',
          f.productDetails ? f.productDetails.nmId : '',
          f.productDetails ? f.productDetails.productName : '',
          f.productDetails ? f.productDetails.supplierArticle : '',
          f.productDetails ? f.productDetails.brandName : '',
          f.size,
          f.wasViewed ? '–î–∞' : '–ù–µ—Ç',
          photoLinks
        ];
      });
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} –æ—Ç–∑—ã–≤–æ–≤ –≤ '${sheetName}'.`);
    } else {
      Logger.log("–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }

    // Post-processing sheet manipulation logic is kept from the original
    Ecommonkey.Wildberries.setFeedbackFormulas(sheet);
    Ecommonkey.Wildberries.disableCheckboxes();
    Utilities.sleep(2000);
    Ecommonkey.Wildberries.checkStopPhrases();
    Utilities.sleep(2000);
    Ecommonkey.Wildberries.updateUniqueReviews();
    Utilities.sleep(2000);
    Ecommonkey.Wildberries.delete_empty_columns_feedBack();

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ feedbacks: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤: ${error.message}`);
  }
}

// üì¢ –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—Å–µ
// –ú–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.

function feedbacks_all() {
  try {
    const apiKey = getAPIStatus('emonkey_feedbacks');
    WildberriesAPI.initialize({ feedbacks: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ AQ36/AR36
    const { from: dateFrom, to: dateTo } = _getDateRangeFromSettings('AQ36', 'AR36');

    const sheetName = 'üì¢ –û—Ç–∑—ã–≤—ã (–≤—Å–µ)';
    const headers = [
      'ID', '–ê–≤—Ç–æ—Ä', '–¢–µ–∫—Å—Ç', '–û—Ü–µ–Ω–∫–∞', '–î–∞—Ç–∞', '–°—Ç–∞—Ç—É—Å', '–û—Ç–≤–µ—á–µ–Ω',
      '–ê—Ä—Ç–∏–∫—É–ª WB', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–ë—Ä–µ–Ω–¥', '–†–∞–∑–º–µ—Ä', '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω', '–§–æ—Ç–æ'
    ];
    const sheet = _setupSheet(sheetName, headers);

    // Fetch both unanswered and answered feedbacks
    const unanswered = WildberriesAPI.feedbacks.getFeedbacks(false, dateFrom, toDate, 5000, 0, 'dateDesc');
    Utilities.sleep(1000); // Pause between requests to avoid rate limiting
    const answered = WildberriesAPI.feedbacks.getFeedbacks(true, dateFrom, toDate, 5000, 0, 'dateDesc');

    const allFeedbacks = [...unanswered, ...answered];
    allFeedbacks.sort((a, b) => new Date(b.createdDate) - new Date(a.createdDate)); // Sort by date descending

    if (allFeedbacks.length > 0) {
      const output = allFeedbacks.map(f => {
        const photoLinks = (f.photoLinks || []).map(p => `=IMAGE("${p.fullSize}")`).join(' ');
        return [
          f.id, f.userName, f.text, f.productValuation, new Date(f.createdDate).toLocaleString(),
          f.state, f.answer ? '–î–∞' : '–ù–µ—Ç',
          f.productDetails ? f.productDetails.nmId : '',
          f.productDetails ? f.productDetails.productName : '',
          f.productDetails ? f.productDetails.supplierArticle : '',
          f.productDetails ? f.productDetails.brandName : '',
          f.size,
          f.wasViewed ? '–î–∞' : '–ù–µ—Ç',
          photoLinks
        ];
      });
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} –æ—Ç–∑—ã–≤–æ–≤ –≤ '${sheetName}'.`);
    } else {
      Logger.log("–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }

    // Post-processing sheet manipulation logic is kept from the original
    Utilities.sleep(5000); Ecommonkey.Wildberries.disableCheckboxes();
    Utilities.sleep(5000); Ecommonkey.Wildberries.checkStopPhrases();
    Utilities.sleep(5000); Ecommonkey.Wildberries.updateUniqueReviews();
    Utilities.sleep(1000); Ecommonkey.Wildberries.delete_empty_columns_feedBack_all();

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ feedbacks_all: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤: ${error.message}`);
  }
}

// –†–∞–±–æ—Ç–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏ - üßë‚Äçüíª –û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –º–æ–∂–Ω–æ:
// –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤.
// –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ—Ç–∑—ã–≤, –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç.
// –û—Ü–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤ –∏/–∏–ª–∏ —Ç–æ–≤–∞—Ä.
// –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤ –º–æ–∂–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–µ—Å—è—Ü–µ–≤ (60 –¥–Ω–µ–π), –ø–æ—Å–ª–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –∏ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑.

/**
 * –°–æ–±–∏—Ä–∞–µ—Ç –æ—Ç–∑—ã–≤—ã, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞, —Å –ª–∏—Å—Ç–∞ 'üßë‚Äçüíª –û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã'.
 * @returns {Array<{id: string, text: string}>} –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.
 */
function _getFeedbacksToAnswer() {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üßë‚Äçüíª –û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã');
    if (!sheet) {
        SpreadsheetApp.getUi().alert("–õ–∏—Å—Ç 'üßë‚Äçüíª –û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã' –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return [];
    }
    const data = sheet.getRange("A2:C" + sheet.getLastRow()).getValues();
    const feedbacks = [];
    for (const row of data) {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è: —á–µ–∫–±–æ–∫—Å –≤ A, ID –æ—Ç–∑—ã–≤–∞ –≤ B, —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –≤ C
        if (row[0] === true && row[1] && row[2]) {
            feedbacks.push({ id: row[1], text: row[2] });
        }
    }
    return feedbacks;
}

function feedbacks_patch() {
  try {
    const apiKey = getAPIStatus('emonkey_feedbacks');
    WildberriesAPI.initialize({ feedbacks: apiKey });

    const feedbacksToAnswer = _getFeedbacksToAnswer();
    if (feedbacksToAnswer.length === 0) {
      Logger.log("–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤, –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–≤–µ—Ç–∞.");
      SpreadsheetApp.getUi().alert("–ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.");
      return;
    }

    let successCount = 0;
    let errorCount = 0;

    feedbacksToAnswer.forEach(feedback => {
      try {
        // API allows batching, but for clarity and rate-limiting, we do it one by one.
        WildberriesAPI.feedbacks.answer(feedback.id, feedback.text);
        Logger.log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤ ID: ${feedback.id}`);
        successCount++;
      } catch (e) {
        Logger.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –æ—Ç–∑—ã–≤ ID: ${feedback.id}. –û—à–∏–±–∫–∞: ${e.message}`);
        errorCount++;
      }
      // Wildberries API for feedbacks has a rate limit of 1 request per second.
      Utilities.sleep(1100);
    });

    SpreadsheetApp.getUi().alert(`–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n–£—Å–ø–µ—à–Ω–æ: ${successCount}\n–° –æ—à–∏–±–∫–∞–º–∏: ${errorCount}`);

  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ feedbacks_patch: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Ç–∑—ã–≤—ã: ${error.message}`);
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// üì¢ –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã üßë‚Äçüíª
// –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã —Ä–∞–∑ –≤ 3 —á–∞—Å–∞
// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –∏ –ø–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–≤–µ—Ç—ã –Ω–∞ –Ω–∏—Ö
function start_feedbacks_partch() {feedbacks_all(); Utilities.sleep(2000); feedbacks_patch(); Utilities.sleep(2000); }

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
function trigger_start_feedbacks_partch() {
    const triggers = ScriptApp.getProjectTriggers();
    let triggerExists = false; for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'start_feedbacks_partch') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('start_feedbacks_partch')
    .timeBased().everyHours(3) .create();}}

// –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã
function delete_start_feedbacks_partch() {
    const triggers = ScriptApp.getProjectTriggers();
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'start_feedbacks_partch') {ScriptApp.deleteTrigger(trigger);break; }}
}

// üöß –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ —Ç–æ–≤–∞—Ä—É // –ú–∞–∫—Å–∏–º—É–º 3 –∑–∞–ø—Ä–æ—Å–∞ –≤ –º–∏–Ω—É—Ç—É
// –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–æ–ø –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ —Ç–æ–≤–∞—Ä—É.
// –ü–∞—Ä–∞–º–µ—Ç—Ä –≤—ã–±–æ—Ä–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:
// limit ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (–º–∞–∫—Å–∏–º—É–º 30)
// topOrderBy ‚Äî —Å–ø–æ—Å–æ–± –≤—ã–±–æ—Ä–∞ —Ç–æ–ø–∞ –∑–∞–ø—Ä–æ—Å–æ–≤

// topOrderBy
// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ–ª—é –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:
// openCard - –ü–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ä—Ç–æ—á–∫—É –∏–∑ –ø–æ–∏—Å–∫–∞
// addToCart - –î–æ–±–∞–≤–∏–ª–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –ø–æ–∏—Å–∫–∞
// openToCart - –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –ø–æ–∏—Å–∫–∞
// orders - –ó–∞–∫–∞–∑–∞–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ø–æ–∏—Å–∫–∞
// cartToOrder - –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –∑–∞–∫–∞–∑ –∏–∑ –ø–æ–∏—Å–∫–∞

// field
// –í–∏–¥—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
// avgPosition ‚Äî –ø–æ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏
// addToCart ‚Äî –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è–º –≤ –∫–æ—Ä–∑–∏–Ω—É
// openCard ‚Äî –ø–æ –æ—Ç–∫—Ä—ã—Ç–∏—é –∫–∞—Ä—Ç–æ—á–∫–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞)
// orders ‚Äî –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–∫–∞–∑–æ–≤
// cartToOrder ‚Äî –ø–æ —Ç–æ–≤–∞—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ—à–ª–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∑–∞–∫–∞–∑
// visibility ‚Äî –ø–æ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞
// minPrice ‚Äî –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ
// maxPrice ‚Äî –ø–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω–µ

function search_words() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId(); const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids); Ecommonkey.Wildberries.checkConnection(isConnected); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  if (isConnected) {
  try { var status_kvo = 'emonkey_content'; // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å
  var apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var sheetsData = Ecommonkey.Wildberries.initializeSheetsSearchWords();
  Ecommonkey.Wildberries.processSearchWordsData(sheetsData, apiKey);
  Utilities.sleep(1000); Ecommonkey.Wildberries.generateNewSentences(); }
    catch (error) {Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
    }
  }
}

///////////*///////////*///////////*///////////*///////////*///////////*///////////*///////////*///////////*///////////*///////////*
// üìï –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
// –ú–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ 6 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ –ö–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ü–∏–π –Ω–∞ –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞

function get_promoList() {
  try {
    const apiKey = getAPIStatus('emonkey_statistics');
    WildberriesAPI.initialize({ statistics: apiKey });

    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –¥–∞—Ç—ã –¥–ª—è –∞–∫—Ü–∏–π –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ AQ37/AR37
    const { from: startDate, to: endDate } = _getDateRangeFromSettings('AQ37', 'AR37');

    const startDateTime = `${startDate}T00:00:00Z`;
    const endDateTime = `${endDate}T23:59:59Z`;

    const promos = WildberriesAPI.statistics.getPromotions(startDateTime, endDateTime);

    const sheet = _setupSheet('üìï –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π', ['ID', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', '–¢–∏–ø']);

    if (promos && promos.length > 0) {
      const output = promos.map(p => [
        p.promoID,
        p.promoName,
        new Date(p.startDateTime).toLocaleString(),
        new Date(p.endDateTime).toLocaleString(),
        p.promoType
      ]);
      sheet.getRange(2, 1, output.length, output[0].length).setValues(output);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${output.length} –∞–∫—Ü–∏–π.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ü–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_promoList: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ü–∏–π: ${error.message}`);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –∞–∫—Ü–∏–π —Å –ª–∏—Å—Ç–∞ 'üìï –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π'.
 * @returns {Array<number>} –ú–∞—Å—Å–∏–≤ ID –∞–∫—Ü–∏–π.
 */
function _getPromoIdsFromSheet() {
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üìï –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π');
    if (!sheet) {
        SpreadsheetApp.getUi().alert("–õ–∏—Å—Ç 'üìï –°–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ get_promoList().");
        return [];
    }
    const lastRow = sheet.getLastRow();
    if (lastRow < 2) return [];
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ ID –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Å—Ç–æ–ª–±—Ü–µ A
    return sheet.getRange(`A2:A${lastRow}`).getValues().flat().filter(id => id);
}

// üìï –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∫—Ü–∏–∏
function get_promoArt() {
  try {
    const apiKey = getAPIStatus('emonkey_statistics');
    WildberriesAPI.initialize({ statistics: apiKey });

    const promoIds = _getPromoIdsFromSheet();
    if (promoIds.length === 0) {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω—ã ID –∞–∫—Ü–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–≤.");
      return;
    }

    const sheet = _setupSheet('üìï –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤', ['ID –ê–∫—Ü–∏–∏', '–ê—Ä—Ç–∏–∫—É–ª WB', '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–ë—Ä–µ–Ω–¥']);
    let allOutput = [];

    promoIds.forEach(promoId => {
      try {
        const articles = WildberriesAPI.statistics.getPromotionArticles(promoId);
        if (articles && articles.length > 0) {
          const output = articles.map(a => [promoId, a.nmId, a.vendorCode, a.brand]);
          allOutput = allOutput.concat(output);
        }
      } catch (e) {
        Logger.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—Ä—Ç–∏–∫—É–ª—ã –¥–ª—è –∞–∫—Ü–∏–∏ ID ${promoId}: ${e.message}`);
      }
      Utilities.sleep(200); // Rate limiting
    });

    if (allOutput.length > 0) {
      sheet.getRange(2, 1, allOutput.length, allOutput[0].length).setValues(allOutput);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${allOutput.length} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞–∫—Ü–∏—è—Ö.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–∫—Ü–∏–π.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_promoArt: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞–∫—Ü–∏–π: ${error.message}`);
  }
}

// üìï –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞–∫—Ü–∏—è–º
function get_promoInfo() {
  try {
    const apiKey = getAPIStatus('emonkey_statistics');
    WildberriesAPI.initialize({ statistics: apiKey });

    const promoIds = _getPromoIdsFromSheet();
    if (promoIds.length === 0) {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω—ã ID –∞–∫—Ü–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.");
      return;
    }

    const sheet = _setupSheet('üìï –ò–Ω—Ñ–æ –ø–æ –∞–∫—Ü–∏—è–º', ['ID –ê–∫—Ü–∏–∏', '–ù–∞–∑–≤–∞–Ω–∏–µ', '–û–ø–∏—Å–∞–Ω–∏–µ', '–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è']);
    let allOutput = [];

    promoIds.forEach(promoId => {
      try {
        const info = WildberriesAPI.statistics.getPromotionInfo(promoId);
        if (info) {
          allOutput.push([promoId, info.promoName, info.description, info.conditions]);
        }
      } catch (e) {
        Logger.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∞–∫—Ü–∏–∏ ID ${promoId}: ${e.message}`);
      }
      Utilities.sleep(200); // Rate limiting
    });

    if (allOutput.length > 0) {
      sheet.getRange(2, 1, allOutput.length, allOutput[0].length).setValues(allOutput);
      Logger.log(`–ó–∞–ø–∏—Å–∞–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ ${allOutput.length} –∞–∫—Ü–∏—è–º.`);
    } else {
      Logger.log("–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∫—Ü–∏—è–º.");
    }
  } catch (error) {
    Logger.log(`–û—à–∏–±–∫–∞ –≤ get_promoInfo: ${error.message}\n${error.stack}`);
    SpreadsheetApp.getUi().alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞–∫—Ü–∏—è–º: ${error.message}`);
  }
}

// ####################################################################################################################################
// üõ°Ô∏è –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è API –∫–ª—é—á–µ–π
// ####################################################################################################################################

// –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø–∏—Å–∏ API –∫–ª—é—á–µ–π
function showApiKeyDialog() {
  var html = HtmlService.createHtmlOutputFromFile('ApiKeyDialog')
      .setWidth(400)
      .setHeight(200);
  SpreadsheetApp.getUi().showModalDialog(html, '–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á');}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç API –∫–ª—é—á–∏ –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –≤ —Å–≤–æ–π—Å—Ç–≤–∞ –ø—Ä–æ–µ–∫—Ç–∞
function setApiProperties(apiKeys) {
  var scriptProperties = PropertiesService.getScriptProperties();
  for (var key in apiKeys) {scriptProperties.setProperty(key, apiKeys[key]);}
  var liame = Session.getActiveUser().getEmail();scriptProperties.setProperty('Email', liame); return true;}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—â–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –∏ —É–¥–∞–ª—è–µ—Ç –≤—Å–µ API –∫–ª—é—á–∏
function clearApiProperties() {
    var ui = SpreadsheetApp.getUi();
    var response = ui.alert(
        '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ API?',
        ui.ButtonSet.YES_NO);

    if (response == ui.Button.YES) {
        var scriptProperties = PropertiesService.getScriptProperties();
        var properties = scriptProperties.getProperties();
        for (var key in properties) {scriptProperties.deleteProperty(key);}
        Logger.log("–í—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã.");
    } else { Logger.log("–£–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."); return; }
  }

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç —Å—Ç–∞—Ç—É—Å–Ω—É—é –∫–∞—Ä—Ç—É –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –≤—ã–±–æ—Ä–∞ API –∫–ª—é—á–∞ –∏—Å—Ö–æ–¥—è –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ —á—Ç–µ–Ω–∏–µ –ª–∏–±–æ –∑–∞–ø–∏—Å—å
function getAPIStatus(status_kvo) {
  // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É –∏ –Ω—É–∂–Ω–æ–º—É –ª–∏—Å—Ç—É
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è API');

  // –û–ø—Ä–µ–¥–µ–ª–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏–π
  var checkboxesRange = sheet.getRange('C6:D17');
  var valuesRange = sheet.getRange('E6:E17');

  // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤—ã —á–µ–∫–±–æ–∫—Å–æ–≤ –∏ –∑–Ω–∞—á–µ–Ω–∏–π
  var checkboxes = checkboxesRange.getValues();
  var values = valuesRange.getValues().flat(); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤

  // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Å—Ç–∞—Ç—É—Å–∞ –≤ –º–∞—Å—Å–∏–≤–µ
  var index = values.indexOf(status_kvo);
  if (index === -1) { throw new Error('–°—Ç–∞—Ç—É—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');}

  // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  var checkboxC = checkboxes[index][0]; // C-—Å—Ç–æ–ª–±–µ—Ü
  var checkboxD = checkboxes[index][1]; // D-—Å—Ç–æ–ª–±–µ—Ü

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –∫–ª—é—á API –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
  if (checkboxC && !checkboxD) {
    return PropertiesService.getScriptProperties().getProperty('API_KEY_1');
  } else if (!checkboxC && checkboxD) {
    return PropertiesService.getScriptProperties().getProperty('API_KEY_2');
  } else {throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤');}
}

// ####################################################################################################################################
// ‚è∞  Updates - –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
// ####################################################################################################################################

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// –Æ–Ω–∏—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –†–ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ advanalytics(); transferDataUnits();
function unit_get_unit() {
  try {advanalytics(); Utilities.sleep(2000); transferDataUnits(); Utilities.sleep(2000);}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_unit_get_unit() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');
    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'unit_get_unit') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('unit_get_unit')
    .timeBased().atHour(9).nearMinute(11).everyDays(1).create();
    sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä unit_get_unit', userEmail]);}} // ‚è∞ 9:11

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// üì¶ –¢–∞—Ä–∏—Ñ—ã –∫–æ—Ä–æ–±–∞ + üì¶ –¢–∞—Ä–∏—Ñ—ã –ø–∞–ª–ª–µ—Ç—ã + üì¶ –¢–∞—Ä–∏—Ñ—ã –≤–æ–∑–≤—Ä–∞—Ç—ã + ü™ß –ö–æ–º–∏—Å—Å–∏–∏ + üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
function tarrif_get_tariffs() {
  try {
    get_tariffsbox();Utilities.sleep(2000);
    get_tariffpallet();Utilities.sleep(2000);
    get_tariffreturn();Utilities.sleep(2000);
    get_commissions();Utilities.sleep(2000);
    get_coefficient();Utilities.sleep(2000);
  }
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_get_tariffs() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'tarrif_get_tariffs') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('tarrif_get_tariffs')
    .timeBased().atHour(4).nearMinute(30).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä tarrif_get_tariffs', userEmail]);}} // ‚è∞ 4:30

// ####################################################################################################################################
// üì¶ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ + üì¶ ID —Å–∫–ª–∞–¥–æ–≤ + üì¶ –°–∫–ª–∞–¥ –ø–æ–¥—Ä–æ–±–Ω–æ 2
function stocks_get_stocksid() {
  try {get_stock_list(); Utilities.sleep(2000); stocksid_refresh(); Utilities.sleep(2000); get_stocks_warehouseIdV2();}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_get_stocksID() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'stocks_get_stocksid') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('stocks_get_stocksid')
    .timeBased().atHour(4).nearMinute(35).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stocks_get_stocksid', userEmail]);}} // ‚è∞ 4:35

// ####################################################################################################################################
// üõÑ –¢–æ–≤–∞—Ä—ã WB + üõÑ –¢–æ–≤–∞—Ä—ã + üõÑ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
function prod_sppProductDetails() {
  try {sppProductDetails(); Utilities.sleep(2000);}  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_prod_sppProductDetails() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'prod_sppProductDetails') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('prod_sppProductDetails')
    .timeBased().atHour(7).nearMinute(40).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä prod_sppProductDetails', userEmail]);}}  // ‚è∞ 7:40

// ####################################################################################################################################
// üõçÔ∏è –í–æ—Ä–æ–Ω–∫–∞ + üõçÔ∏è –í–æ—Ä–æ–Ω–∫–∞ –ø–æ –¥–Ω—è–º + üí≥ –ò—Å—Ç–æ—Ä–∏–∏ –∑–∞—Ç—Ä–∞—Ç –†–ö
function stat_get_nmId() {
  try {get_nmId(); Utilities.sleep(2000); get_nmId_days(); Utilities.sleep(2000); get_advupd(); Utilities.sleep(2000);}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_get_nmId() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'stat_get_nmId') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('stat_get_nmId')
    .timeBased().atHour(7).nearMinute(45).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stat_get_nmId', userEmail]);}}  // ‚è∞ 7:45

// ####################################################################################################################################
// üõí –ó–∞–∫–∞–∑—ã
function stat_get_orders() {
  try {get_orders(); Utilities.sleep(2000);}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_orders() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'stat_get_orders') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('stat_get_orders')
    .timeBased().atHour(7).nearMinute(50).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stat_get_orders', userEmail]);}} // ‚è∞ 7:50

// ####################################################################################################################################
// üí≥ –ü—Ä–æ–¥–∞–∂–∏
function stat_get_sales() {
  try {get_sales(); Utilities.sleep(2000);}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_sales() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'stat_get_sales') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('stat_get_sales')
    .timeBased().atHour(7).nearMinute(50).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stat_get_sales', userEmail]);}} // ‚è∞ 7:50

// ####################################################################################################################################
// üìù –°–ø–∏—Å–æ–∫ –†–ö + ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö + üóì –ü–æ–∑–∏—Ü–∏–∏
function adverts_advList() {
  try {get_adverts(); Utilities.sleep(2000); get_advList(); Utilities.sleep(2000); get_adv_booster();}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_adverts_advList() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'adverts_advList') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('adverts_advList')
    .timeBased().atHour(7).nearMinute(55).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä adverts_advList', userEmail]);}}  // ‚è∞ 7:55

// ####################################################################################################################################
// üöß –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –†–ö + üöß –ó–∞–ø—Ä–æ—Å—ã + üöß –ö–ª–∞—Å—Ç–µ—Ä
function full_stats_weeks() {
  try {get_advStats(); Utilities.sleep(2000);} // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ weeks –∞ –∑–∞ 1 –º–µ—Å—è—Ü
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_full_stats_weeks() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'full_stats_weeks') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('full_stats_weeks')
    .timeBased().atHour(8).nearMinute(00).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä full_stats_weeks', userEmail]);}}  // ‚è∞ 8:00

// ####################################################################################################################################
// üì¶ –°–∫–ª–∞–¥ + üì¶ –°–∫–ª–∞–¥ –æ—Å—Ç–∞—Ç–∫–∏
function stat_get_stocks() {
  try {get_stocks(); Utilities.sleep(2000); get_stocks_warehouseId(); Utilities.sleep(2000);}
  catch (e) { Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ stat_get_stocks: ' + e.message);}}

function trigger_get_stocks() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'stat_get_stocks') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('stat_get_stocks')
    .timeBased().atHour(8).nearMinute(05).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä stat_get_stocks', userEmail]);}}  // ‚è∞ 8:05

// ####################################################################################################################################
// ####################################################################################################################################
// ‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —Ñ—É–Ω–∫—Ü–∏—è
function start_all_trigers() { // –º–∞—Å—Å–∏–≤ —Ñ—É–Ω–∫—Ü–∏–π
  var scripts = [trigger_unit_get_unit, trigger_prod_sppProductDetails, trigger_get_nmId, trigger_orders,trigger_sales, trigger_adverts_advList, trigger_full_stats_weeks, trigger_get_stocks, trigger_get_tariffs, trigger_get_stocksID  ];
  for (var i = 0; i < scripts.length; i++) {scripts[i](); Utilities.sleep(500);}}

// ‚õî –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —Ñ—É–Ω–∫—Ü–∏—è
function deleteAllTriggers() {
  var triggers = ScriptApp.getProjectTriggers();   // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
  for (var i = 0; i < triggers.length; i++) {ScriptApp.deleteTrigger(triggers[i]);}   // –£–¥–∞–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
  Logger.log('–í—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã');}

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–∞ –ø–æ—á—Ç—É
function executeWithErrorHandling(func) {try {func();} // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
  catch (error) {sendErrorReport(func.name, error);}} // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ

function sendErrorReport(functionName, error, triggerName) {
  const emailAddress = PropertiesService.getScriptProperties().getProperty('Email');
  const subject = '–û—à–∏–±–∫–∞ –≤ Google Apps Script';
  const message = `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏: ${functionName}\n` +
                  `–í—Ä–µ–º—è –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏: ${new Date().toLocaleString()}\n` +
                  `–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: ${error.message}\n` +
                  `–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞: ${triggerName}`;
                   MailApp.sendEmail(emailAddress, subject, message);}


// ####################################################################################################################################
// ‚è∞ Auto Adverts ü§ñü§ñü§ñ - –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –†–æ–±–æ—Ç–∞
// ####################################################################################################################################

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ü§ñ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –†–ö ///////////////////////////////////////////////////////////////////////////////////////
function autoAdvertUpdate() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  const dataRange = sheet.getRange('B9:B97').getValues();
  const checkboxRangeK = sheet.getRange('K9:K97');
  const checkboxesK = checkboxRangeK.getValues();
  const checkboxRangeE = sheet.getRange('E9:E97');
  const checkboxesE = checkboxRangeE.getValues();

  // –ò—â–µ–º –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É —Å TRUE –≤ K
  let firstTrueIndex = -1;
  for (let i = 0; i < checkboxesK.length; i++) {if (checkboxesK[i][0] === true) {firstTrueIndex = i;break;}}

  // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ —è—á–µ–π–∫—É —Å TRUE –≤ K
  if (firstTrueIndex !== -1) {
    const firstTrueRow = firstTrueIndex + 9; // –ü–æ—Å–∫–æ–ª—å–∫—É –∏–Ω–¥–µ–∫—Å—ã –º–∞—Å—Å–∏–≤–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
    let foundNext = false;    // –§–ª–∞–≥, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —É–¥–∞–ª–æ—Å—å –ª–∏ –Ω–∞–π—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç

    for (let i = firstTrueRow + 1; i <= 97; i++) {  // –ò—â–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
      if (dataRange[i - 9][0] !== '') { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ B –Ω–µ –ø—É—Å—Ç–∞—è
        // –û–±–Ω–æ–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å K
        checkboxesK[firstTrueIndex][0] = false; // –£–±–∏—Ä–∞–µ–º TRUE
        checkboxesK[i - 9][0] = true; // –°—Ç–∞–≤–∏–º TRUE –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —è—á–µ–π–∫–µ
        foundNext = true; break;}
    }

    if (!foundNext) { // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é TRUE
      checkboxesK[firstTrueIndex][0] = false; // –£–±–∏—Ä–∞–µ–º TRUE
      checkboxesK[0][0] = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TRUE –≤ –ø–µ—Ä–≤–æ–π —è—á–µ–π–∫–µ
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —á–µ–∫–±–æ–∫—Å–æ–≤ K
    checkboxRangeK.setValues(checkboxesK); console.log("–°–º–µ—â–∞–µ–º —á–µ–∫-–±–æ–∫—Å –≤ K."); Utilities.sleep(1000);
    Ecommonkey.Wildberries.updateCheckParaRecPolSettings(); console.log("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ B9:B97 & M38:M97 —Å—Ç–∞–≤–∏–º check –≤ E"); Utilities.sleep(1000);
    // Ecommonkey.Wildberries.filterRoboCampaignsAuto(); // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞–º–ø–∞–Ω–∏–∏ –¥–ª—è –†–æ–±–æ—Ç–∞ ü§ñü§ñü§ñ —Ç–æ–ª—å–∫–æ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è
    // Utilities.sleep(1000);
    updateSettingsFromStatistics(); Utilities.sleep(1000); // –û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—ã —á–µ–∫–±–æ–∫—Å–æ–≤ E –∏ K
    for (let i = 0; i < checkboxesE.length; i++) {
      const eChecked = checkboxesE[i][0]; // –ó–Ω–∞—á–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ E
      const kChecked = checkboxesK[i][0]; // –ó–Ω–∞—á–µ–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ K

      if (eChecked && kChecked) {
        console.log(`–û–±–∞ —á–µ–∫–±–æ–∫—Å–∞ E${i + 9} –∏ K${i + 9} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –í—ã–∑—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–æ–∫.`);
        updateWildberriesStatsRecPol();
      } else if (!eChecked && kChecked) {
        console.log(`–ß–µ–∫–±–æ–∫—Å K${i + 9} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, E${i + 9} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –í—ã–∑—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é CPC/CTR.`);
        updateWildberriesStats();
      } else {console.log(`–ß–µ–∫–±–æ–∫—Å—ã E${i + 9} –∏ K${i + 9} –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Å–ª–æ–≤–∏—è–º –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π.`);}
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
function updateWildberriesStats() {
    console.log("–ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Wildberries.");
    Ecommonkey.Wildberries.updateSettingsFromStatistics();console.log("–ú–µ–Ω—è–µ–º –§–æ—Ç–æ."); Utilities.sleep(1000);
    get_stats_keywords_weeks(); console.log("–ü–æ–ª—É—á–∞–µ–º –§—Ä–∞–∑—ã –∏ –ü–æ–∫–∞–∑—ã."); Utilities.sleep(1000);
    get_words_clust(); console.log("–ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Ç–µ—Ä—ã."); Utilities.sleep(1000);
    Ecommonkey.Wildberries.updateCheckboxes_CpcCtr(); console.log("–í—ã–¥–µ–ª—è–µ–º —á–µ–∫-–±–æ–∫—Å—ã CPC/CTR."); Utilities.sleep(3000);
    set_excludedRobo(); console.log("–£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Å —Å–ª–æ–≤–∞."); Utilities.sleep(1000);
    Ecommonkey.Wildberries.uncheckCheckboxes(); console.log("–û—Ç–∫–ª—é—á–∞–µ–º —á–µ–∫-–±–æ–∫—Å—ã.");
    console.log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.");
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–æ–∫
function updateWildberriesStatsRecPol() {
    console.log("–ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ Wildberries.");
    Ecommonkey.Wildberries.updateSettingsFromStatistics();console.log("–ú–µ–Ω—è–µ–º –§–æ—Ç–æ."); Utilities.sleep(1000);
    get_stats_keywords_weeks(); console.log("–ü–æ–ª—É—á–∞–µ–º –§—Ä–∞–∑—ã –∏ –ü–æ–∫–∞–∑—ã."); Utilities.sleep(1000);
    get_words_clust(); console.log("–ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Ç–µ—Ä—ã."); Utilities.sleep(1000);
    Ecommonkey.Wildberries.updateCheckboxesRecPol(); console.log("–í—ã–¥–µ–ª—è–µ–º —á–µ–∫-–±–æ–∫—Å—ã –¥–ª—è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–æ–∫");
    Utilities.sleep(3000);
    set_excludedRobo(); console.log("–£–¥–∞–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Å —Å–ª–æ–≤–∞."); Utilities.sleep(1000);
    Ecommonkey.Wildberries.uncheckCheckboxes(); console.log("–û—Ç–∫–ª—é—á–∞–µ–º —á–µ–∫-–±–æ–∫—Å—ã.");
    console.log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.");
}

// –ú–∏–Ω—É—Å —Ñ—Ä–∞–∑—ã –¥–ª—è –†–æ–±–æ—Ç–∞ ü§ñü§ñü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞–º–ø–∞–Ω–∏—è *************************************
function set_excludedRobo() {
  setexcludedFormulas();
  var status_kvo = 'emonkey_advert';
  var apiKey = getAPIStatus(status_kvo); Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);
  var credentials = Ecommonkey.Wildberries.getCampaignId(); if (!credentials) return;
  var campaignId = credentials.campaignId;
  const Urls = Ecommonkey.Wildberries.getlinks(); const apiUrl = `${Urls.advsetexcluded}${campaignId}`;
  Ecommonkey.Wildberries.sendExcludedPhrasesRobo(apiUrl, apiKey); }


// ####################################################################################################################################
// ####################################################################################################################################
// ü§ñ –°–æ–∑–¥–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –¢—Ä–∏–≥–≥–µ—Ä –∏–∑ –ú–µ–Ω—é

function createAutoAdvertTrigger() {
  const userEmail = Session.getActiveUser().getEmail();
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

  ScriptApp.newTrigger('autoAdvertUpdate') .timeBased(). everyMinutes(5) .create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä autoAdvertUpdate', userEmail]); // ‚è∞ 5 min
  try {  // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º –æ–∫–Ω–µ
  SpreadsheetApp.getUi().alert('ü§ñ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –†–ö, –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç —Ä–æ–±–æ—Ç –±—É–¥–µ—Ç –æ–±—Ö–æ–¥–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã');} catch (error) {
  Logger.log('–ù–µ –º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è ü§ñ –†–æ–±–æ—Ç–∞, —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω');}} // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è ü§ñ

// ####################################################################################################################################
// ü§ñ –£–¥–∞–ª–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –†–ö —Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –ú–µ–Ω—é

function deleteAutoAdvertTrigger() {
    const triggers = ScriptApp.getProjectTriggers();  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    for (const trigger of triggers) { // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏ –∏—â–µ–º –Ω—É–∂–Ω—ã–π
        if (trigger.getHandlerFunction() === 'autoAdvertUpdate') {  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä –∏–º–µ–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏
            ScriptApp.deleteTrigger(trigger);
            Logger.log('–¢—Ä–∏–≥–≥–µ—Ä autoAdvertUpdate –±—ã–ª —É–¥–∞–ª–µ–Ω.');
            // SpreadsheetApp.getUi().alert('ü§ñ –í—ã —É—Å–ø–µ—à–Ω–æ ‚õî –æ—Ç–∫–ª—é—á–∏–ª–∏ üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –†–ö');
            return; // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
        }}
    Logger.log('–¢—Ä–∏–≥–≥–µ—Ä autoAdvertUpdate –Ω–µ –Ω–∞–π–¥–µ–Ω.');} // –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    // SpreadsheetApp.getUi().alert('ü§ñ –¢—Ä–∏–≥–≥–µ—Ä autoAdvertUpdate –Ω–µ –Ω–∞–π–¥–µ–Ω.');


// ####################################################################################################################################
// –£–¥–∞–ª–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ ‚è∞ 3:00 –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è deleteAutoAdvertTrigger + start_all_trigers

function auto_robo_stop() { deleteAutoAdvertTrigger(); Utilities.sleep(2000); start_all_trigers(); }
function trigger_auto_robo_stop() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'auto_robo_stop') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('auto_robo_stop')
    .timeBased().atHour(3).nearMinute(00).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä auto_robo_stop', userEmail]);}}  // ‚è∞ 3:00

// ####################################################################################################################################
// –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–±–æ—Ç–∞ –≤ ‚è∞ 9:00 createAutoAdvertTrigger
function auto_robo_start() {createAutoAdvertTrigger();}
function trigger_auto_robo_start() {
    const userEmail = Session.getActiveUser().getEmail();
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Logs');

    const triggers = ScriptApp.getProjectTriggers(); let triggerExists = false;
    for (const trigger of triggers) {
    if (trigger.getHandlerFunction() === 'auto_robo_start') {triggerExists = true; break;}}
    if (!triggerExists) {ScriptApp.newTrigger('auto_robo_start')
    .timeBased().atHour(23).nearMinute(05).everyDays(1).create(); sheet.appendRow([new Date(), '–°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä auto_robo_start', userEmail]);}}  // ‚è∞ 9:05


/**
 * {@link https://developer.mozilla.org/ru/docs/Web/HTTP/Status –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–¥–æ–≤ –æ—Ç–≤–µ—Ç–∞ (—Å–æ—Å—Ç–æ—è–Ω–∏—è) HTTP}
 **/
const ResponseCodesHTTP = Object.freeze({
  SUCCESS: Object.freeze({
    200: "200 OK (¬´—Ö–æ—Ä–æ—à–æ¬ª)",
    201: "201 Created (¬´—Å–æ–∑–¥–∞–Ω–æ¬ª)",
    202: "202 Accepted (¬´–ø—Ä–∏–Ω—è—Ç–æ¬ª)",
    203: "203 Non-Authoritative Information (¬´–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–Ω–∞¬ª)",
    204: "204 No Content (¬´–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ¬ª)",
    205: "205 Reset Content (¬´—Å–±—Ä–æ—Å–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ¬ª)",
    206: "206 Partial Content (¬´—á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ¬ª)",
    207: "207 Multi-Status (¬´–º–Ω–æ–≥–æ—Å—Ç–∞—Ç—É—Å–Ω—ã–π¬ª)",
    208: "208 Already Reported (¬´—É–∂–µ —Å–æ–æ–±—â–∞–ª–æ—Å—å¬ª)",
    226: "226 IM Used (¬´–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ IM¬ª)",
  }),
  OTHERCODES: Object.freeze({
    100: "100 Continue (¬´–ø—Ä–æ–¥–æ–ª–∂–∞–π¬ª)",
    101: "101 Switching Protocols (¬´–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤¬ª)",
    102: "102 Processing (¬´–∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞¬ª);",
    103: "103 Early Hints (¬´—Ä–∞–Ω–Ω—è—è –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è¬ª)",
    300: "300 Multiple Choices (¬´–º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—ã–±–æ—Ä–æ–≤¬ª)",
    301: "301 Moved Permanently (¬´–ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞¬ª)",
    302: "302 Moved Temporarily (¬´–ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ¬ª)",
    303: "303 See Other (¬´—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–æ–µ¬ª)",
    304: "304 Not Modified (¬´–Ω–µ –∏–∑–º–µ–Ω—è–ª–æ—Å—å¬ª)",
    305: "305 Use Proxy (¬´–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏¬ª)",
    306: "306 - –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ (–∫–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–Ω–Ω–∏—Ö —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö)",
    307: "307 Temporary Redirect (¬´–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª)",
    308: "308 Permanent Redirect (¬´–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª)",
    400: "400 Bad Request (¬´–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å¬ª)",
    401: "401 Unauthorized (¬´–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª—Å—è)¬ª)",
    402: "402 Payment Required (¬´–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –æ–ø–ª–∞—Ç–∞¬ª)",
    403: "403 Forbidden (¬´–∑–∞–ø—Ä–µ—â–µ–Ω–æ (–Ω–µ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω)¬ª)",
    404: "404 Not Found (¬´–Ω–µ –Ω–∞–π–¥–µ–Ω–æ¬ª)",
    405: "405 Method Not Allowed (¬´–º–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è¬ª)",
    406: "406 Not Acceptable (¬´–Ω–µ–ø—Ä–∏–µ–º–ª–µ–º–æ¬ª)",
    407: "407 Proxy Authentication Required (¬´–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏¬ª)",
    408: "408 Request Timeout (¬´–∏—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è¬ª)",
    409: "409 Conflict (¬´–∫–æ–Ω—Ñ–ª–∏–∫—Ç¬ª)",
    410: "410 Gone (¬´—É–¥–∞–ª—ë–Ω¬ª)",
    411: "411 Length Required (¬´–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª–∏–Ω–∞¬ª)",
    412: "412 Precondition Failed (¬´—É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ¬ª)",
    413: "413 Payload Too Large (¬´–ø–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–∞¬ª)",
    414: "414 URI Too Long (¬´URI —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π¬ª)",
    415: "415 Unsupported Media Type (¬´–Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö¬ª)",
    416: "416 Range Not Satisfiable (¬´–¥–∏–∞–ø–∞–∑–æ–Ω –Ω–µ –¥–æ—Å—Ç–∏–∂–∏–º¬ª)",
    417: "417 Expectation Failed (¬´–æ–∂–∏–¥–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å¬ª)",
    418: "418 I‚Äôm a teapot (¬´—è ‚Äî —á–∞–π–Ω–∏–∫¬ª)",
    419: "419 Authentication Timeout (not in RFC 2616) (¬´–æ–±—ã—á–Ω–æ –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ CSRF¬ª)",
    421: "421 Misdirected Request",
    422: "422 Unprocessable Entity (¬´–Ω–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä¬ª)",
    423: "423 Locked (¬´–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ¬ª);",
    424: "424 Failed Dependency (¬´–Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å¬ª)",
    425: "425 Too Early (¬´—Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ¬ª);",
    426: "426 Upgrade Required (¬´–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ¬ª)",
    428: "428 Precondition Required (¬´–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥—É—Å–ª–æ–≤–∏–µ¬ª)",
    429: "429 Too Many Requests (¬´—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤¬ª)",
    431: "431 Request Header Fields Too Large (¬´–ø–æ–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ¬ª)",
    449: "449 Retry With (¬´–ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å¬ª)",
    451: "451 Unavailable For Legal Reasons (¬´–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º¬ª)",
    499: "499 Client Closed Request (–∫–ª–∏–µ–Ω—Ç –∑–∞–∫—Ä—ã–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)",
    500: "500 Internal Server Error (¬´–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞¬ª)",
    501: "501 Not Implemented (¬´–Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ¬ª)",
    502: "502 Bad Gateway (¬´–ø–ª–æ—Ö–æ–π, –æ—à–∏–±–æ—á–Ω—ã–π —à–ª—é–∑¬ª)",
    503: "503 Service Unavailable (¬´—Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω¬ª)",
    504: "504 Gateway Timeout (¬´—à–ª—é–∑ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç¬ª)",
    505: "505 HTTP Version Not Supported (¬´–≤–µ—Ä—Å–∏—è HTTP –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è¬ª)",
    506: "506 Variant Also Negotiates (¬´–≤–∞—Ä–∏–∞–Ω—Ç —Ç–æ–∂–µ –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ¬ª)",
    507: "507 Insufficient Storage (¬´–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞¬ª);",
    508: "508 Loop Detected (¬´–æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª)",
    509: "509 Bandwidth Limit Exceeded (¬´–∏—Å—á–µ—Ä–ø–∞–Ω–∞ –ø—Ä–æ–ø—É—Å–∫–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞¬ª)",
    510: "510 Not Extended (¬´–Ω–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–æ¬ª)",
    511: "511 Network Authentication Required (¬´—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ç–µ–≤–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª)",
    520: "520 Unknown Error (¬´–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞¬ª)",
    521: "521 Web Server Is Down (¬´–≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç¬ª)",
    522: "522 Connection Timed Out (¬´—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç¬ª)",
    523: "523 Origin Is Unreachable (¬´–∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω¬ª)",
    524: "524 A Timeout Occurred (¬´–≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ¬ª)",
    525: "525 SSL Handshake Failed (¬´–∫–≤–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSL –Ω–µ —É–¥–∞–ª–æ—Å—å¬ª)",
    526: "526 Invalid SSL Certificate (¬´–Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç SSL¬ª)",
  }),

  message: function (code) {
    for (const category in this) {
      if (this[category][code]) {
        return this[category][code];
      }
    }
    return `Unknown code: ${code}`;
  },
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è üíé –í—ã–∫—É–ø–∞ % —á–µ—Ä–µ–∑ –ø—Ä–æ–¥–∞–∂–∏ –∏ –∑–∞–∫–∞–∑—ã –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
function runOrdersSalesPercent() {
  get_orders(); Utilities.sleep(2000);
  get_sales(); Utilities.sleep(5000);
  Ecommonkey.Wildberries.aggregateSales();
}

function runRun(){ Ecommonkey.Wildberries.aggregateSales(); }

/*/ /*/
/*/ /*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// –°–º–æ—Ç—Ä–∏–º –∫–∞–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
function showTriggersDialog() {
  var triggers = ScriptApp.getProjectTriggers();

  function getTriggerType(trigger) {
    if (trigger.getEventType() === ScriptApp.EventType.CLOCK) {
      return "Time-driven";
    } else if (trigger.getEventType() === ScriptApp.EventType.EDIT) {
      return "On edit";
    } else if (trigger.getEventType() === ScriptApp.EventType.OPEN) {
      return "On open";
    } else {
      return "–î—Ä—É–≥–æ–π";
    }
  }

  function getTriggerSchedule(trigger) {
    if (trigger.getEventType() === ScriptApp.EventType.CLOCK) {
      return "–í—Ä–µ–º–µ–Ω–Ω–æ–π —Ç—Ä–∏–≥–≥–µ—Ä";
    } else {
      return "–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è";
    }
  }

  var triggersData = triggers.map(function(trigger, index) {
    return {
      id: trigger.getUniqueId(),
      functionName: trigger.getHandlerFunction(),
      typeName: getTriggerType(trigger),
      schedule: getTriggerSchedule(trigger)
    };
  });

  var htmlContent = `
    <!DOCTYPE html>
    <html>
      <head>
        <base target="_top">
        <style>
          body {
            font-family: Arial, sans-serif;
            background-color: #363c49;
            color: #f3f3f3;
            padding: 20px;
          }
          table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
          }
          th, td {
            border: 1px solid #49505f;
            padding: 8px;
            text-align: left;
          }
          th {
            background-color: #49505f;
            color: #67ffbf;
          }
          tr:nth-child(even) {
            background-color: #49505f;
          }
          input[type="checkbox"] {
            transform: scale(1.2);
          }
          button {
            background-color: #67ffbf;
            color: #363c49;
            font-weight: bold;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            border-radius: 4px;
          }
          button:hover {
            background-color: #52e6a9;
          }
        </style>
      </head>
      <body>
        <h2>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã</h2>
        <form id="triggerForm">
          <table>
            <thead>
              <tr>
                <th>‚úì</th>
                <th>#</th>
                <th>–§—É–Ω–∫—Ü–∏—è</th>
                <th>–¢–∏–ø —Ç—Ä–∏–≥–≥–µ—Ä–∞</th>
                <th>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</th>
              </tr>
            </thead>
            <tbody id="triggerTableBody"></tbody>
          </table>
          <button type="button" onclick="deleteSelected()">–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ</button>
        </form>

        <script>
          let triggers = ${JSON.stringify(triggersData)};
          const tbody = document.getElementById("triggerTableBody");

          function renderTable() {
            tbody.innerHTML = '';
            triggers.forEach(function(trigger, i) {
              const row = document.createElement("tr");
              row.innerHTML = \`
                <td><input type="checkbox" name="triggerCheckbox" value="\${trigger.id}"></td>
                <td>\${i + 1}</td>
                <td>\${trigger.functionName}</td>
                <td>\${trigger.typeName}</td>
                <td>\${trigger.schedule}</td>
              \`;
              tbody.appendChild(row);
            });
          }

          function deleteSelected() {
            const checkboxes = document.querySelectorAll('input[name="triggerCheckbox"]:checked');
            const ids = Array.from(checkboxes).map(cb => cb.value);
            if (ids.length === 0) {
              alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
              return;
            }

            if (confirm("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã?")) {
              google.script.run.withSuccessHandler((newTriggers) => {
                alert("–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.");
                triggers = newTriggers;
                renderTable();
              }).deleteTriggersByIds(ids);
            }
          }

          renderTable();
        </script>
      </body>
    </html>
  `;

  var html = HtmlService.createHtmlOutput(htmlContent).setWidth(1000).setHeight(600);
  SpreadsheetApp.getUi().showModalDialog(html, "–î–µ–π—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã");
}

// –£–¥–∞–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞
function deleteTriggersByIds(ids) {
  const allTriggers = ScriptApp.getProjectTriggers();
  ids.forEach(id => {
    const trigger = allTriggers.find(t => t.getUniqueId() === id);
    if (trigger) ScriptApp.deleteTrigger(trigger);
  });
  return getTriggersList(); // –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
}

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
function getTriggersList() {
  function getTriggerType(trigger) {
    if (trigger.getEventType() === ScriptApp.EventType.CLOCK) return "Time-driven";
    if (trigger.getEventType() === ScriptApp.EventType.EDIT) return "On edit";
    if (trigger.getEventType() === ScriptApp.EventType.OPEN) return "On open";
    return "–î—Ä—É–≥–æ–π";
  }

  function getTriggerSchedule(trigger) {
    if (trigger.getEventType() === ScriptApp.EventType.CLOCK) return "–í—Ä–µ–º–µ–Ω–Ω–æ–π —Ç—Ä–∏–≥–≥–µ—Ä";
    return "–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è";
  }

  return ScriptApp.getProjectTriggers().map(trigger => ({
    id: trigger.getUniqueId(),
    functionName: trigger.getHandlerFunction(),
    typeName: getTriggerType(trigger),
    schedule: getTriggerSchedule(trigger),
  }));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// –ó–∞–∫–∞–∑—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –ø–æ–∏—Å–∫–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–∞–º —Ç–æ–≤–∞—Ä–∞

function get_searchReport() {
  const ids = SpreadsheetApp.getActiveSpreadsheet().getId();
  const seePro = Ecommonkey.Wildberries.isConnected();
  const isConnected = seePro.includes(ids);
  Ecommonkey.Wildberries.checkConnection(isConnected);

  if (!isConnected) {
    Logger.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ. –ó–∞–ø—Ä–æ—Å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.");
    return;
  }

  const statusKvo = 'emonkey_statistics';
  const apiKey = getAPIStatus(statusKvo);
  Logger.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API Key: ' + apiKey);

  const Urls = Ecommonkey.Wildberries.getlinks();
  const url = Urls.searchreport;

  try {
    const sheetSettings = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
    const dateFrom = sheetSettings.getRange('AQ31').getValue();
    const dateTo = sheetSettings.getRange('AR31').getValue();
    const nmId = Number(sheetSettings.getRange('O30').getValue());

    const allSearchTexts = sheetSettings.getRange('U6:U').getValues()
      .flat()
      .filter(val => val && val.toString().trim() !== "");

    const chunkSize = 30;
    const maxChunks = 10; // –º–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API (300 searchTexts)
    const delayMs = 25000; // 25 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

    const sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üî• –ó–∞–∫–∞–∑—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º');
    sheet.clearContents();

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏
    let rows = [];
    rows.push(["–¢–∏–ø", "–î–∞—Ç–∞", "–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", "–°—Ä–µ–¥–Ω—è—è –ø–æ–∑–∏—Ü–∏—è", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", "–ß–∞—Å—Ç–æ—Ç–∞"]);
    sheet.getRange(1, 1, 1, rows[0].length).setValues(rows);

    let writeRowIndex = 2; // —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)

    for (let i = 0; i < maxChunks; i++) {
      let chunk = allSearchTexts.slice(i * chunkSize, i * chunkSize + chunkSize);
      if (chunk.length === 0) {
        Logger.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ " + i);
        break;
      }

      const payload = {
        period: {
          start: Utilities.formatDate(new Date(dateFrom), Session.getScriptTimeZone(), "yyyy-MM-dd"),
          end: Utilities.formatDate(new Date(dateTo), Session.getScriptTimeZone(), "yyyy-MM-dd")
        },
        nmId: nmId,
        searchTexts: chunk
      };

      Logger.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä " + (i + 1) + " —Å –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏: " + chunk.join(", "));

      const options = {
        method: 'post',
        contentType: 'application/json',
        payload: JSON.stringify(payload),
        headers: {
          Authorization: apiKey
        },
        muteHttpExceptions: true
      };

      const response = UrlFetchApp.fetch(url, options);
      const code = response.getResponseCode();

      if (code !== 200) {
        Logger.log("–û—à–∏–±–∫–∞ –æ—Ç WB –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ " + (i + 1) + ": " + response.getContentText());
        SpreadsheetApp.getUi().alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Wildberries: " + response.getContentText());
        break;
      }

      const json = JSON.parse(response.getContentText());
      const data = json.data;

      let chunkRows = [];

      // –ò—Ç–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –≤—Å–µ–º—É —Ç–æ–≤–∞—Ä—É
      if (data.total && Array.isArray(data.total)) {
        data.total.forEach(item => {
          chunkRows.push(["–ò—Ç–æ–≥–æ", item.dt, "", item.avgPosition, item.orders, ""]);
        });
      }

      // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –ø–æ–∏—Å–∫–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–∞–º
      if (data.items && Array.isArray(data.items)) {
        data.items.forEach(entry => {
          entry.dateItems.forEach(di => {
            chunkRows.push(["–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å", di.dt, entry.text, di.avgPosition, di.orders, entry.frequency]);
          });
        });
      }

      if (chunkRows.length > 0) {
        sheet.getRange(writeRowIndex, 1, chunkRows.length, chunkRows[0].length).setValues(chunkRows);
        writeRowIndex += chunkRows.length;
      }

      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
      if (i < maxChunks - 1) {
        Logger.log("–ñ–¥–µ–º " + (delayMs / 1000) + " —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º...");
        Utilities.sleep(delayMs);
      }
    }

    Logger.log("–ó–∞–ø—Ä–æ—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã.");

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ' + error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error.message);
  }
}
